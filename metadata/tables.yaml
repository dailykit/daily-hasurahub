- table:
    schema: brands
    name: brand
  configuration:
    custom_root_fields:
      insert: createBrands
      select_aggregate: brandsAggregate
      insert_one: createBrand
      select_by_pk: brand
      select: brands
      delete: deleteBrands
      update: updateBrands
      delete_by_pk: deleteBrand
      update_by_pk: updateBrand
    custom_column_names: {}
  array_relationships:
    - name: brand_campaigns
      using:
        foreign_key_constraint_on:
          column: brandId
          table:
            schema: crm
            name: brand_campaign
    - name: brand_coupons
      using:
        foreign_key_constraint_on:
          column: brandId
          table:
            schema: crm
            name: brand_coupon
    - name: brand_customers
      using:
        foreign_key_constraint_on:
          column: brandId
          table:
            schema: crm
            name: brand_customer
    - name: brand_Orders
      using:
        foreign_key_constraint_on:
          column: brandId
          table:
            schema: order
            name: order
    - name: collections
      using:
        foreign_key_constraint_on:
          column: brandId
          table:
            schema: onDemand
            name: brand_collection
    - name: onDemandSettings
      using:
        foreign_key_constraint_on:
          column: brandId
          table:
            schema: brands
            name: brand_storeSetting
    - name: recurrences
      using:
        foreign_key_constraint_on:
          column: brandId
          table:
            schema: fulfilment
            name: brand_recurrence
    - name: subscriptionStoreSettings
      using:
        foreign_key_constraint_on:
          column: brandId
          table:
            schema: brands
            name: brand_subscriptionStoreSetting
    - name: subscriptionTitles
      using:
        foreign_key_constraint_on:
          column: brandId
          table:
            schema: subscription
            name: brand_subscriptionTitle
- table:
    schema: brands
    name: brand_paymentPartnership
- table:
    schema: brands
    name: brand_storeSetting
  object_relationships:
    - name: brand
      using:
        foreign_key_constraint_on: brandId
    - name: onDemandSetting
      using:
        foreign_key_constraint_on: storeSettingId
- table:
    schema: brands
    name: brand_subscriptionStoreSetting
  object_relationships:
    - name: brand
      using:
        foreign_key_constraint_on: brandId
    - name: subscriptionStoreSetting
      using:
        foreign_key_constraint_on: subscriptionStoreSettingId
- table:
    schema: brands
    name: storeSetting
  configuration:
    custom_root_fields:
      insert: createStoreSettings
      select_aggregate: storeSettingsAggregate
      insert_one: createStoreSetting
      select_by_pk: storeSettingByPK
      select: storeSettings
      delete: deleteStoreSetting
      update: updateStoreSetting
      delete_by_pk: deleteStoreSettingByPK
      update_by_pk: updateStoreSettingByPK
    custom_column_names: {}
  object_relationships:
    - name: brand
      using:
        manual_configuration:
          remote_table:
            schema: brands
            name: brand_storeSetting
          column_mapping:
            id: storeSettingId
  array_relationships:
    - name: brandSettings
      using:
        foreign_key_constraint_on:
          column: storeSettingId
          table:
            schema: brands
            name: brand_storeSetting
- table:
    schema: brands
    name: subscriptionStoreSetting
  object_relationships:
    - name: brand
      using:
        manual_configuration:
          remote_table:
            schema: brands
            name: brand_subscriptionStoreSetting
          column_mapping:
            id: subscriptionStoreSettingId
- table:
    schema: content
    name: faqs
  array_relationships:
    - name: informationBlocks
      using:
        foreign_key_constraint_on:
          column: faqsId
          table:
            schema: content
            name: informationBlock
- table:
    schema: content
    name: identifier
  object_relationships:
    - name: page
      using:
        foreign_key_constraint_on: pageTitle
  array_relationships:
    - name: infomationSections
      using:
        foreign_key_constraint_on:
          column: identifierTitle
          table:
            schema: content
            name: infomationSection
- table:
    schema: content
    name: infomationSection
  object_relationships:
    - name: identifier
      using:
        foreign_key_constraint_on: identifierTitle
- table:
    schema: content
    name: informationBlock
  object_relationships:
    - name: faq
      using:
        foreign_key_constraint_on: faqsId
    - name: informationGrid
      using:
        foreign_key_constraint_on: informationGridId
- table:
    schema: content
    name: informationGrid
  array_relationships:
    - name: informationBlocks
      using:
        foreign_key_constraint_on:
          column: informationGridId
          table:
            schema: content
            name: informationBlock
- table:
    schema: content
    name: page
  array_relationships:
    - name: identifiers
      using:
        foreign_key_constraint_on:
          column: pageTitle
          table:
            schema: content
            name: identifier
- table:
    schema: content
    name: template
  event_triggers:
    - name: handleTemplate
      definition:
        enable_manual: true
        insert:
          columns: "*"
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook: https://156bd2d32e02.ngrok.io/webhooks/handle
- table:
    schema: crm
    name: brand_campaign
  configuration:
    custom_root_fields:
      insert: createBrandCampaigns
      select_aggregate: brandCampaignsAggregate
      insert_one: createBrandCampaign
      select_by_pk: brandCampaign
      select: brandCampaigns
      delete: deleteBrandCampaigns
      update: updateBrandCampaigns
      delete_by_pk: deleteBrandCampaign
      update_by_pk: updateBrandCampaign
    custom_column_names: {}
  object_relationships:
    - name: brand
      using:
        foreign_key_constraint_on: brandId
    - name: campaign
      using:
        foreign_key_constraint_on: campaignId
- table:
    schema: crm
    name: brand_coupon
  configuration:
    custom_root_fields:
      insert: createBrandCoupons
      select_aggregate: brandCouponsAggregate
      insert_one: createBrandCoupon
      select_by_pk: brandCoupon
      select: brandCoupons
      delete: deleteBrandCoupons
      update: updateBrandCoupons
      delete_by_pk: deleteBrandCoupon
      update_by_pk: updateBrandCoupon
    custom_column_names: {}
  object_relationships:
    - name: brand
      using:
        foreign_key_constraint_on: brandId
    - name: coupon
      using:
        foreign_key_constraint_on: couponId
- table:
    schema: crm
    name: brand_customer
  configuration:
    custom_root_fields:
      insert: createBrandCustomers
      select_aggregate: brandCustomersAggregate
      insert_one: createBrandCustomer
      select_by_pk: brandCustomer
      select: brandCustomers
      delete: deleteBrandCustomers
      update: updateBrandCustomers
      delete_by_pk: deleteBrandCustomer
      update_by_pk: updateBrandCustomer
    custom_column_names: {}
  object_relationships:
    - name: brand
      using:
        foreign_key_constraint_on: brandId
    - name: customer
      using:
        foreign_key_constraint_on: keycloakId
    - name: subscription
      using:
        foreign_key_constraint_on: subscriptionId
- table:
    schema: crm
    name: campaign
  configuration:
    custom_root_fields:
      insert: createCampaigns
      select_aggregate: campaignsAggregate
      insert_one: createCampaign
      select_by_pk: campaign
      select: campaigns
      delete: deleteCampaigns
      update: updateCampaigns
      delete_by_pk: deleteCampaign
      update_by_pk: updateCampaign
    custom_column_names: {}
  object_relationships:
    - name: campaignType
      using:
        foreign_key_constraint_on: type
    - name: condition
      using:
        foreign_key_constraint_on: conditionId
  array_relationships:
    - name: brands
      using:
        foreign_key_constraint_on:
          column: campaignId
          table:
            schema: crm
            name: brand_campaign
    - name: customerReferrals
      using:
        foreign_key_constraint_on:
          column: referralCampaignId
          table:
            schema: crm
            name: customerReferral
    - name: rewardHistories
      using:
        foreign_key_constraint_on:
          column: campaignId
          table:
            schema: crm
            name: rewardHistory
    - name: rewards
      using:
        foreign_key_constraint_on:
          column: campaignId
          table:
            schema: crm
            name: reward
  computed_fields:
    - name: isCampaignValid
      definition:
        function:
          schema: crm
          name: iscampaignvalid
      comment: ""
- table:
    schema: crm
    name: campaignType
  array_relationships:
    - name: campaigns
      using:
        foreign_key_constraint_on:
          column: type
          table:
            schema: crm
            name: campaign
    - name: rewardTypes
      using:
        foreign_key_constraint_on:
          column: campaignTypeId
          table:
            schema: crm
            name: rewardType_campaignType
- table:
    schema: crm
    name: coupon
  configuration:
    custom_root_fields:
      insert: createCoupons
      select_aggregate: couponsAggregate
      insert_one: createCoupon
      select_by_pk: coupon
      select: coupons
      delete: deleteCoupons
      update: updateCoupons
      delete_by_pk: deleteCoupon
      update_by_pk: updateCoupon
    custom_column_names: {}
  object_relationships:
    - name: visibilityCondition
      using:
        foreign_key_constraint_on: visibleConditionId
  array_relationships:
    - name: brands
      using:
        foreign_key_constraint_on:
          column: couponId
          table:
            schema: crm
            name: brand_coupon
    - name: customers
      using:
        foreign_key_constraint_on:
          column: couponId
          table:
            schema: crm
            name: customer_voucher
    - name: rewardHistories
      using:
        foreign_key_constraint_on:
          column: couponId
          table:
            schema: crm
            name: rewardHistory
    - name: rewardHistoryView2
      using:
        manual_configuration:
          remote_table:
            schema: crm
            name: rewardHistoryView2
          column_mapping:
            id: couponId
    - name: rewards
      using:
        foreign_key_constraint_on:
          column: couponId
          table:
            schema: crm
            name: reward
  computed_fields:
    - name: isCouponValid
      definition:
        function:
          schema: crm
          name: iscouponvalid
      comment: ""
- table:
    schema: crm
    name: customer
  configuration:
    custom_root_fields:
      insert: createCustomers
      select_aggregate: customers_aggregate
      insert_one: createCustomer
      select_by_pk: customer
      select: customers
      delete: deleteCustomers
      update: updateCustomers
      delete_by_pk: deleteCustomer
      update_by_pk: updateCustomer
    custom_column_names: {}
  object_relationships:
    - name: customerReferralDetails
      using:
        manual_configuration:
          remote_table:
            schema: crm
            name: customerReferral
          column_mapping:
            keycloakId: keycloakId
    - name: loyaltyPoint
      using:
        manual_configuration:
          remote_table:
            schema: crm
            name: loyaltyPoint
          column_mapping:
            keycloakId: keycloakId
    - name: subscription
      using:
        foreign_key_constraint_on: subscriptionId
    - name: wallet
      using:
        manual_configuration:
          remote_table:
            schema: crm
            name: wallet
          column_mapping:
            keycloakId: keycloakId
  array_relationships:
    - name: brandCustomers
      using:
        foreign_key_constraint_on:
          column: keycloakId
          table:
            schema: crm
            name: brand_customer
    - name: customerInsight
      using:
        manual_configuration:
          remote_table:
            schema: insights
            name: test5
          column_mapping:
            source: source
    - name: orderCarts
      using:
        foreign_key_constraint_on:
          column: customerId
          table:
            schema: crm
            name: orderCart
    - name: orders
      using:
        foreign_key_constraint_on:
          column: keycloakId
          table:
            schema: order
            name: order
    - name: rewardHistories
      using:
        foreign_key_constraint_on:
          column: keycloakId
          table:
            schema: crm
            name: rewardHistory
    - name: subscriptionOccurences
      using:
        foreign_key_constraint_on:
          column: keycloakId
          table:
            schema: subscription
            name: subscriptionOccurence_customer
    - name: vouchers
      using:
        foreign_key_constraint_on:
          column: keycloakId
          table:
            schema: crm
            name: customer_voucher
  remote_relationships:
    - definition:
        remote_field:
          paymentHub_payment:
            arguments:
              where:
                customerKeycloakId:
                  _eq: $keycloakId
        hasura_fields:
          - keycloakId
        remote_schema: dailycloak
      name: attemptedPayments
    - definition:
        remote_field:
          platform_customer:
            arguments:
              keycloakId: $keycloakId
        hasura_fields:
          - keycloakId
        remote_schema: dailykey
      name: platform_customer
    - definition:
        remote_field:
          platform_customerByClient:
            arguments:
              keycloakId: $keycloakId
        hasura_fields:
          - keycloakId
        remote_schema: dailykey
      name: platform_customerByClient
    - definition:
        remote_field:
          platform_customers:
            arguments:
              where:
                keycloakId:
                  _eq: $keycloakId
        hasura_fields:
          - keycloakId
        remote_schema: dailykey
      name: platform_customers
  event_triggers:
    - name: createCustomerByClient
      definition:
        enable_manual: true
        insert:
          columns: "*"
      retry_conf:
        num_retries: 10
        interval_sec: 1
        timeout_sec: 60
      webhook_from_env: WEBHOOK_CREATE_CUSTOMER_BY_CLIENT
      headers:
        - name: OrganizationId
          value_from_env: HEADER_REMOTE_SCHEMA_ORGANIZATIONID
- table:
    schema: crm
    name: customerData
- table:
    schema: crm
    name: customerReferral
  configuration:
    custom_root_fields:
      insert: createCustomerReferrals
      select_aggregate: customerReferralsAggregate
      insert_one: createCustomerReferral
      select_by_pk: customerReferral
      select: customerReferrals
      delete: deleteCustomerReferrals
      update: updateCustomerReferrals
      delete_by_pk: deleteCustomerReferral
      update_by_pk: updateCustomerReferral
    custom_column_names: {}
  object_relationships:
    - name: customer
      using:
        foreign_key_constraint_on: keycloakId
    - name: customerReferrer
      using:
        foreign_key_constraint_on: referredByCode
    - name: referralCampaign
      using:
        foreign_key_constraint_on: referralCampaignId
  array_relationships:
    - name: customerReferrals
      using:
        foreign_key_constraint_on:
          column: referredByCode
          table:
            schema: crm
            name: customerReferral
- table:
    schema: crm
    name: customerView
- table:
    schema: crm
    name: customer_voucher
  object_relationships:
    - name: coupon
      using:
        foreign_key_constraint_on: couponId
    - name: customer
      using:
        foreign_key_constraint_on: keycloakId
- table:
    schema: crm
    name: errorCart
  object_relationships:
    - name: order
      using:
        manual_configuration:
          remote_table:
            schema: order
            name: order
          column_mapping:
            orderId: id
    - name: orderCart
      using:
        manual_configuration:
          remote_table:
            schema: crm
            name: orderCart
          column_mapping:
            orderCartId: id
  event_triggers:
    - name: Order_Failed
      definition:
        enable_manual: false
        insert:
          columns: "*"
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_DEFAULT_NOTIFICATION_HANDLER
- table:
    schema: crm
    name: fact
- table:
    schema: crm
    name: loyaltyPoint
  configuration:
    custom_root_fields:
      insert: createLoyaltyPoints
      select_aggregate: loyaltyPointsAggregate
      insert_one: createLoyaltyPoint
      select_by_pk: loyaltyPoint
      select: loyaltyPoints
      delete: deleteLoyaltyPoints
      update: updateLoyaltyPoints
      delete_by_pk: deleteLoyaltyPoint
      update_by_pk: updateLoyaltyPoint
    custom_column_names: {}
  object_relationships:
    - name: brand
      using:
        foreign_key_constraint_on: brandId
    - name: customer
      using:
        foreign_key_constraint_on: keycloakId
  array_relationships:
    - name: loyaltyPointTransactions
      using:
        foreign_key_constraint_on:
          column: loyaltyPointId
          table:
            schema: crm
            name: loyaltyPointTransaction
- table:
    schema: crm
    name: loyaltyPointTransaction
  configuration:
    custom_root_fields:
      insert: createLoyaltyPointsTransactions
      select_aggregate: loyaltyPointsTransactionsAggregate
      insert_one: createLoyaltyPointsTransaction
      select_by_pk: loyaltyPointsTransaction
      select: loyaltyPointsTransactions
      delete: deleteLoyaltyPointsTransactions
      update: updateLoyaltyPointsTransactions
      delete_by_pk: deleteLoyaltyPointsTransaction
      update_by_pk: updateLoyaltyPointsTransaction
    custom_column_names: {}
  object_relationships:
    - name: customerReferral
      using:
        foreign_key_constraint_on: customerReferralId
    - name: loyaltyPoint
      using:
        foreign_key_constraint_on: loyaltyPointId
    - name: orderCart
      using:
        foreign_key_constraint_on: orderCartId
  array_relationships:
    - name: rewardHistories
      using:
        foreign_key_constraint_on:
          column: loyaltyPointTransactionId
          table:
            schema: crm
            name: rewardHistory
- table:
    schema: crm
    name: orderCart
  configuration:
    custom_root_fields:
      insert: createCarts
      select_aggregate: cartAggregate
      insert_one: createCart
      select_by_pk: cartByPK
      select: cart
      delete: deleteCarts
      update: updateCart
      delete_by_pk: deleteCartByPK
      update_by_pk: updateCartByPK
    custom_column_names: {}
  object_relationships:
    - name: brand
      using:
        foreign_key_constraint_on: brandId
    - name: customer
      using:
        foreign_key_constraint_on: customerId
    - name: order
      using:
        foreign_key_constraint_on: orderId
    - name: rmkOrder
      using:
        manual_configuration:
          remote_table:
            schema: crm
            name: rmkOrder
          column_mapping:
            id: orderCartId
    - name: subscriptionOccurence
      using:
        foreign_key_constraint_on: subscriptionOccurenceId
  array_relationships:
    - name: loyaltyPointTransactions
      using:
        foreign_key_constraint_on:
          column: orderCartId
          table:
            schema: crm
            name: loyaltyPointTransaction
    - name: rewardHistories
      using:
        foreign_key_constraint_on:
          column: orderCartId
          table:
            schema: crm
            name: rewardHistory
    - name: rewards
      using:
        foreign_key_constraint_on:
          column: orderCartId
          table:
            schema: crm
            name: orderCart_rewards
    - name: subscriptionOccurenceCustomers
      using:
        foreign_key_constraint_on:
          column: orderCartId
          table:
            schema: subscription
            name: subscriptionOccurence_customer
    - name: walletTransactions
      using:
        foreign_key_constraint_on:
          column: orderCartId
          table:
            schema: crm
            name: walletTransaction
  computed_fields:
    - name: isValid
      definition:
        function:
          schema: crm
          name: iscartvalid
      comment: ""
    - name: itemTotal
      definition:
        function:
          schema: crm
          name: itemtotal
      comment: ""
    - name: tax
      definition:
        function:
          schema: crm
          name: tax
      comment: ""
    - name: taxPercent
      definition:
        function:
          schema: crm
          name: taxpercent
      comment: ""
    - name: totalPrice
      definition:
        function:
          schema: crm
          name: totalprice
      comment: ""
    - name: deliveryPrice
      definition:
        function:
          schema: crm
          name: deliveryprice
      comment: ""
    - name: discount
      definition:
        function:
          schema: crm
          name: discount
      comment: ""
    - name: loyaltyPointsUsable
      definition:
        function:
          schema: crm
          name: loyaltyPointsUsable
      comment: ""
    - name: walletAmountUsable
      definition:
        function:
          schema: crm
          name: walletAmountUsable
      comment: ""
    - name: addOnTotal
      definition:
        function:
          schema: crm
          name: add_on_total
      comment: ""
  remote_relationships:
    - definition:
        remote_field:
          paymentHub_payment:
            arguments:
              where:
                customerKeycloakId:
                  _eq: $customerKeycloakId
        hasura_fields:
          - customerKeycloakId
        remote_schema: dailycloak
      name: attemptedPayments
    - definition:
        remote_field:
          paymentHub_payment:
            arguments:
              where:
                customerKeycloakId:
                  _eq: $customerKeycloakId
        hasura_fields:
          - customerKeycloakId
        remote_schema: dailycloak
      name: payment
    - definition:
        remote_field:
          platform_stripePaymentMethod:
            arguments:
              stripePaymentMethodId: $paymentMethodId
        hasura_fields:
          - paymentMethodId
        remote_schema: dailykey
      name: paymentCard
  event_triggers:
    - name: initiateOrder
      definition:
        enable_manual: true
        update:
          columns:
            - paymentStatus
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_INITIATE_ORDER
    - name: initiatePayment
      definition:
        enable_manual: true
        update:
          columns:
            - status
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_INITIATE_PAYMENT
- table:
    schema: crm
    name: orderCart_rewards
  configuration:
    custom_root_fields:
      insert: createOrderCartRewards
      select_aggregate: orderCartRewardsAggregate
      insert_one: createOrderCartReward
      select_by_pk: orderCartReward
      select: orderCartRewards
      delete: deleteOrderCartRewards
      update: updateOrderCartRewards
      delete_by_pk: deleteOrderCartReward
      update_by_pk: updateOrderCartReward
    custom_column_names: {}
  object_relationships:
    - name: orderCart
      using:
        foreign_key_constraint_on: orderCartId
    - name: reward
      using:
        foreign_key_constraint_on: rewardId
- table:
    schema: crm
    name: reward
  object_relationships:
    - name: campaign
      using:
        foreign_key_constraint_on: campaignId
    - name: condition
      using:
        foreign_key_constraint_on: conditionId
    - name: coupon
      using:
        foreign_key_constraint_on: couponId
  array_relationships:
    - name: orderCarts
      using:
        foreign_key_constraint_on:
          column: rewardId
          table:
            schema: crm
            name: orderCart_rewards
    - name: rewardHistories
      using:
        foreign_key_constraint_on:
          column: rewardId
          table:
            schema: crm
            name: rewardHistory
- table:
    schema: crm
    name: rewardHistory
  object_relationships:
    - name: campaign
      using:
        foreign_key_constraint_on: campaignId
    - name: coupon
      using:
        foreign_key_constraint_on: couponId
    - name: customer
      using:
        foreign_key_constraint_on: keycloakId
    - name: loyaltyPointTransaction
      using:
        foreign_key_constraint_on: loyaltyPointTransactionId
    - name: order
      using:
        foreign_key_constraint_on: orderId
    - name: orderCart
      using:
        foreign_key_constraint_on: orderCartId
    - name: reward
      using:
        foreign_key_constraint_on: rewardId
    - name: walletTransaction
      using:
        foreign_key_constraint_on: walletTransactionId
- table:
    schema: crm
    name: rewardHistoryView
  object_relationships:
    - name: date
      using:
        manual_configuration:
          remote_table:
            schema: insights
            name: date
          column_mapping:
            rewarddate: date
    - name: day
      using:
        manual_configuration:
          remote_table:
            schema: insights
            name: day
          column_mapping:
            rewardday: dayNumber
    - name: month
      using:
        manual_configuration:
          remote_table:
            schema: insights
            name: month
          column_mapping:
            rewardmonth: number
    - name: rewardHistory
      using:
        manual_configuration:
          remote_table:
            schema: crm
            name: rewardHistory
          column_mapping:
            id: id
- table:
    schema: crm
    name: rewardHistoryView2
- table:
    schema: crm
    name: rewardType
  array_relationships:
    - name: campaignTypes
      using:
        foreign_key_constraint_on:
          column: rewardTypeId
          table:
            schema: crm
            name: rewardType_campaignType
- table:
    schema: crm
    name: rewardType_campaignType
  object_relationships:
    - name: campaignType
      using:
        foreign_key_constraint_on: campaignTypeId
    - name: rewardType
      using:
        foreign_key_constraint_on: rewardTypeId
- table:
    schema: crm
    name: rmkOrder
  object_relationships:
    - name: orderCart
      using:
        foreign_key_constraint_on: orderCartId
- table:
    schema: crm
    name: session
- table:
    schema: crm
    name: wallet
  configuration:
    custom_root_fields:
      insert: createWallets
      select_aggregate: walletsAggregate
      insert_one: createWallet
      select_by_pk: wallet
      select: wallets
      delete: deleteWallets
      update: updateWallets
      delete_by_pk: deleteWallet
      update_by_pk: updateWallet
    custom_column_names: {}
  object_relationships:
    - name: brand
      using:
        foreign_key_constraint_on: brandId
    - name: customer
      using:
        foreign_key_constraint_on: keycloakId
  array_relationships:
    - name: walletTransactions
      using:
        foreign_key_constraint_on:
          column: walletId
          table:
            schema: crm
            name: walletTransaction
- table:
    schema: crm
    name: walletTransaction
  configuration:
    custom_root_fields:
      insert: createWalletTransactions
      select_aggregate: walletTransactionsAggregate
      insert_one: createWalletTransaction
      select_by_pk: walletTransaction
      select: walletTransactions
      delete: deleteWalletTransactions
      update: updateWalletTransactions
      delete_by_pk: deleteWalletTransaction
      update_by_pk: updateWalletTransaction
    custom_column_names: {}
  object_relationships:
    - name: customerReferral
      using:
        foreign_key_constraint_on: customerReferralId
    - name: orderCart
      using:
        foreign_key_constraint_on: orderCartId
    - name: wallet
      using:
        foreign_key_constraint_on: walletId
  array_relationships:
    - name: rewardHistories
      using:
        foreign_key_constraint_on:
          column: walletTransactionId
          table:
            schema: crm
            name: rewardHistory
- table:
    schema: deviceHub
    name: computer
  configuration:
    custom_root_fields:
      insert: createComputers
      select_aggregate: computersAggregate
      insert_one: createComputer
      select_by_pk: computer
      select: computers
      delete: deleteComputers
      update: updateComputers
      delete_by_pk: deleteComputer
      update_by_pk: updateComputer
    custom_column_names: {}
  array_relationships:
    - name: printers
      using:
        foreign_key_constraint_on:
          column: computerId
          table:
            schema: deviceHub
            name: printer
    - name: scales
      using:
        foreign_key_constraint_on:
          column: computerId
          table:
            schema: deviceHub
            name: scale
- table:
    schema: deviceHub
    name: config
  configuration:
    custom_root_fields:
      insert: createConfigs
      select_aggregate: conifgsAggregate
      insert_one: createConfig
      select_by_pk: config
      select: configs
      delete: deleteConfigs
      update: updateConfigs
      delete_by_pk: deleteConfig
      update_by_pk: updateConfig
    custom_column_names: {}
- table:
    schema: deviceHub
    name: labelTemplate
  configuration:
    custom_root_fields:
      insert: createLabelTemplates
      select_aggregate: labelTemplatesAggregate
      select_by_pk: labelTemplate
      select: labelTemplates
      delete: deleteLabelTemplates
      update: updateLabelTemplates
    custom_column_names: {}
- table:
    schema: deviceHub
    name: printer
  configuration:
    custom_root_fields:
      insert: createPrinters
      select_aggregate: printersAggregate
      insert_one: createPrinter
      select_by_pk: printer
      select: printers
      delete: deletePrinters
      update: updatePrinters
      delete_by_pk: deletePrinter
      update_by_pk: updatePrinter
    custom_column_names: {}
  object_relationships:
    - name: computer
      using:
        foreign_key_constraint_on: computerId
  array_relationships:
    - name: attachedStations_kot
      using:
        foreign_key_constraint_on:
          column: printNodeId
          table:
            schema: settings
            name: station_kot_printer
    - name: attachedStations_label
      using:
        foreign_key_constraint_on:
          column: printNodeId
          table:
            schema: settings
            name: station_label_printer
    - name: defaultStation_kot
      using:
        foreign_key_constraint_on:
          column: defaultKotPrinterId
          table:
            schema: settings
            name: station
    - name: defaultStation_label
      using:
        foreign_key_constraint_on:
          column: defaultLabelPrinterId
          table:
            schema: settings
            name: station
- table:
    schema: deviceHub
    name: printerType
  array_relationships:
    - name: printers
      using:
        foreign_key_constraint_on:
          column: printerType
          table:
            schema: deviceHub
            name: printer
- table:
    schema: deviceHub
    name: scale
  configuration:
    custom_root_fields:
      insert: createScales
      select_aggregate: scalesAggregate
      insert_one: createScale
      select_by_pk: scale
      select: scales
      delete: deleteScales
      update: updateScales
      delete_by_pk: deleteScale
      update_by_pk: updateScale
    custom_column_names: {}
  object_relationships:
    - name: assignedStation
      using:
        foreign_key_constraint_on: stationId
    - name: computer
      using:
        foreign_key_constraint_on: computerId
- table:
    schema: fulfilment
    name: brand_recurrence
  configuration:
    custom_root_fields:
      insert: createBrandRecurrences
      select_aggregate: brandRecurrencesAggregate
      insert_one: createBrandRecurrence
      select_by_pk: brandRecurrence
      select: brandRecurrences
      delete: deleteBrandRecurrences
      update: updateBrandRecurrences
      delete_by_pk: deleteBrandRecurrence
      update_by_pk: updateBrandRecurrence
    custom_column_names: {}
  object_relationships:
    - name: brand
      using:
        foreign_key_constraint_on: brandId
    - name: recurrence
      using:
        foreign_key_constraint_on: recurrenceId
- table:
    schema: fulfilment
    name: charge
  configuration:
    custom_root_fields:
      insert: createCharges
      select_aggregate: chargesAggregate
      insert_one: createCharge
      select_by_pk: chargeByPK
      select: charges
      delete: deleteCharge
      update: updateCharge
      delete_by_pk: deleteChargeByPK
      update_by_pk: updateChargeByPK
    custom_column_names: {}
  object_relationships:
    - name: mileRange
      using:
        foreign_key_constraint_on: mileRangeId
  array_relationships:
    - name: deliveryOptions
      using:
        foreign_key_constraint_on:
          column: chargeId
          table:
            schema: fulfilment
            name: deliveryPreferenceByCharge
- table:
    schema: fulfilment
    name: deliveryPreferenceByCharge
  object_relationships:
    - name: charge
      using:
        foreign_key_constraint_on: chargeId
    - name: deliveryService
      using:
        foreign_key_constraint_on: clauseId
- table:
    schema: fulfilment
    name: deliveryService
  configuration:
    custom_root_fields:
      insert: createDeliveryServices
      select_aggregate: deliveryServiceAggregate
      insert_one: createDeliveryService
      select_by_pk: deliveryService
      select: deliveryServices
      delete: deleteDeliveryServices
      update: updateDeliveryServices
      delete_by_pk: deleteDeliveryService
      update_by_pk: updateDeliveryService
    custom_column_names: {}
  array_relationships:
    - name: orders
      using:
        foreign_key_constraint_on:
          column: deliveryPartnershipId
          table:
            schema: order
            name: order
- table:
    schema: fulfilment
    name: fulfillmentType
  configuration:
    custom_root_fields:
      select_aggregate: fulfillmentTypeAggregates
      select_by_pk: fulfillmentType
      select: fulfillmentTypes
    custom_column_names: {}
  array_relationships:
    - name: recurrences
      using:
        foreign_key_constraint_on:
          column: type
          table:
            schema: fulfilment
            name: recurrence
- table:
    schema: fulfilment
    name: mileRange
  configuration:
    custom_root_fields:
      insert: createMileRanges
      select_aggregate: mileRangesAggregate
      insert_one: createMileRange
      select_by_pk: mileRangeByPK
      select: mileRanges
      delete: deleteMileRange
      update: updateMileRange
      delete_by_pk: deleteMileRangeByPK
      update_by_pk: updateMileRangeByPK
    custom_column_names: {}
  object_relationships:
    - name: timeSlot
      using:
        foreign_key_constraint_on: timeSlotId
  array_relationships:
    - name: charges
      using:
        foreign_key_constraint_on:
          column: mileRangeId
          table:
            schema: fulfilment
            name: charge
  computed_fields:
    - name: preOrderDeliveryValidity
      definition:
        function:
          schema: fulfilment
          name: preOrderDeliveryValidity
      comment: ""
- table:
    schema: fulfilment
    name: recurrence
  configuration:
    custom_root_fields:
      insert: createRecurrences
      select_aggregate: recurrenceAggregate
      insert_one: createRecurrence
      select_by_pk: recurrenceByPK
      select: recurrences
      delete: deleteRecurrence
      update: updateRecurrence
      delete_by_pk: deleteRecurrenceByPK
      update_by_pk: updateRecurrenceByPK
    custom_column_names: {}
  array_relationships:
    - name: brands
      using:
        foreign_key_constraint_on:
          column: recurrenceId
          table:
            schema: fulfilment
            name: brand_recurrence
    - name: timeSlots
      using:
        foreign_key_constraint_on:
          column: recurrenceId
          table:
            schema: fulfilment
            name: timeSlot
- table:
    schema: fulfilment
    name: timeSlot
  configuration:
    custom_root_fields:
      insert: createTimeSlots
      select_aggregate: timeSlotsAggregate
      insert_one: createTimeSlot
      select_by_pk: timeSlotByPK
      select: timeSlots
      delete: deleteTimeSlot
      update: updateTimeSlot
      delete_by_pk: deleteTimeSlotByPK
      update_by_pk: updateTimeSlotByPK
    custom_column_names: {}
  object_relationships:
    - name: recurrence
      using:
        foreign_key_constraint_on: recurrenceId
  array_relationships:
    - name: mileRanges
      using:
        foreign_key_constraint_on:
          column: timeSlotId
          table:
            schema: fulfilment
            name: mileRange
  computed_fields:
    - name: preOrderPickupValidity
      definition:
        function:
          schema: fulfilment
          name: preOrderPickupValidity
      comment: ""
- table:
    schema: imports
    name: import
  event_triggers:
    - name: Bulk_Imports
      definition:
        enable_manual: false
        update:
          columns:
            - confirm
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook: http://example.com
- table:
    schema: imports
    name: importHistory
  configuration:
    custom_root_fields:
      insert: createImportHistory
    custom_column_names: {}
  object_relationships:
    - name: import
      using:
        foreign_key_constraint_on: importId
  array_relationships:
    - name: supplierItems
      using:
        foreign_key_constraint_on:
          column: importId
          table:
            schema: inventory
            name: supplierItem
    - name: suppliers
      using:
        foreign_key_constraint_on:
          column: importId
          table:
            schema: inventory
            name: supplier
- table:
    schema: ingredient
    name: ingredient
  configuration:
    custom_root_fields:
      insert: createIngredient
      select_aggregate: ingredientsAggregate
      select_by_pk: ingredient
      select: ingredients
      delete: deleteIngredient
      update: updateIngredient
    custom_column_names: {}
  array_relationships:
    - name: ingredientProcessings
      using:
        foreign_key_constraint_on:
          column: ingredientId
          table:
            schema: ingredient
            name: ingredientProcessing
    - name: ingredientSachets
      using:
        foreign_key_constraint_on:
          column: ingredientId
          table:
            schema: ingredient
            name: ingredientSachet
  computed_fields:
    - name: isValid
      definition:
        function:
          schema: ingredient
          name: isingredientvalid
      comment: ""
- table:
    schema: ingredient
    name: ingredientProcessing
  configuration:
    custom_root_fields:
      insert: createIngredientProcessing
      select_aggregate: ingredientProcessingsAggregate
      select_by_pk: ingredientProcessing
      select: ingredientProcessings
      delete: deleteIngredientProcessing
      update: updateIngredientProcessing
    custom_column_names: {}
  object_relationships:
    - name: ingredient
      using:
        foreign_key_constraint_on: ingredientId
    - name: processing
      using:
        foreign_key_constraint_on: processingName
  array_relationships:
    - name: ingredientSachets
      using:
        foreign_key_constraint_on:
          column: ingredientProcessingId
          table:
            schema: ingredient
            name: ingredientSachet
- table:
    schema: ingredient
    name: ingredientSacahet_recipeHubSachet
- table:
    schema: ingredient
    name: ingredientSachet
  configuration:
    custom_root_fields:
      insert: createIngredientSachet
      select_aggregate: ingredientSachetsAggregate
      select_by_pk: ingredientSachet
      select: ingredientSachets
      delete: deleteIngredientSachet
      update: updateIngredientSachet
    custom_column_names: {}
  object_relationships:
    - name: ingredient
      using:
        foreign_key_constraint_on: ingredientId
    - name: ingredientProcessing
      using:
        foreign_key_constraint_on: ingredientProcessingId
    - name: liveModeOfFulfillment
      using:
        foreign_key_constraint_on: liveMOF
    - name: unitId
      using:
        foreign_key_constraint_on: unit
  array_relationships:
    - name: modeOfFulfillments
      using:
        foreign_key_constraint_on:
          column: ingredientSachetId
          table:
            schema: ingredient
            name: modeOfFulfillment
    - name: orderSachets
      using:
        foreign_key_constraint_on:
          column: ingredientSachetId
          table:
            schema: order
            name: orderSachet
    - name: recipeYields
      using:
        foreign_key_constraint_on:
          column: ingredientSachetId
          table:
            schema: simpleRecipe
            name: simpleRecipeYield_ingredientSachet
  computed_fields:
    - name: isValid
      definition:
        function:
          schema: ingredient
          name: issachetvalid
      comment: ""
    - name: nutritionalInfo
      definition:
        function:
          schema: ingredient
          name: nutritionalInfo
      comment: ""
    - name: cost
      definition:
        function:
          schema: ingredient
          name: cost
      comment: ""
- table:
    schema: ingredient
    name: modeOfFulfillment
  configuration:
    custom_root_fields:
      insert: createModeOfFulfillments
      select_aggregate: modeOfFulfillmentsAggregate
      insert_one: createModeOfFulfillment
      select_by_pk: modeOfFulfillment
      select: modeOfFulfillments
      delete: deleteModeOfFulfillments
      update: updateModeOfFulfillments
      delete_by_pk: deleteModeOfFulfillment
      update_by_pk: updateModeOfFulfillment
    custom_column_names: {}
  object_relationships:
    - name: bulkItem
      using:
        foreign_key_constraint_on: bulkItemId
    - name: ingredientSachet
      using:
        foreign_key_constraint_on: ingredientSachetId
    - name: labelTemplate
      using:
        foreign_key_constraint_on: labelTemplateId
    - name: operationConfig
      using:
        foreign_key_constraint_on: operationConfigId
    - name: packaging
      using:
        foreign_key_constraint_on: packagingId
    - name: sachetItem
      using:
        foreign_key_constraint_on: sachetItemId
    - name: station
      using:
        foreign_key_constraint_on: stationId
  computed_fields:
    - name: isValid
      definition:
        function:
          schema: ingredient
          name: ismodevalid
      comment: ""
    - name: nutritionalInfo
      definition:
        function:
          schema: ingredient
          name: getMOFNutritionalInfo
      comment: ""
    - name: cost
      definition:
        function:
          schema: ingredient
          name: getMOFCost
      comment: ""
  event_triggers:
    - name: mofUpdate
      definition:
        enable_manual: false
        insert:
          columns: "*"
        update:
          columns:
            - isLive
            - isPublished
            - priority
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_MOF_UPDATE
- table:
    schema: ingredient
    name: modeOfFulfillmentEnum
  is_enum: true
- table:
    schema: insights
    name: app_module_insight
  object_relationships:
    - name: insight
      using:
        foreign_key_constraint_on: insightIdentifier
- table:
    schema: insights
    name: chart
  object_relationships:
    - name: insight
      using:
        foreign_key_constraint_on: insightIdentifier
- table:
    schema: insights
    name: date
  object_relationships:
    - name: DayName
      using:
        foreign_key_constraint_on: day
  array_relationships:
    - name: orders
      using:
        manual_configuration:
          remote_table:
            schema: order
            name: order
          column_mapping:
            date: created_at
    - name: rewardHistories
      using:
        manual_configuration:
          remote_table:
            schema: crm
            name: rewardHistoryView
          column_mapping:
            date: rewarddate
    - name: viewRewardHistories2
      using:
        manual_configuration:
          remote_table:
            schema: crm
            name: rewardHistoryView2
          column_mapping:
            date: rewarddate
- table:
    schema: insights
    name: day
  array_relationships:
    - name: dates
      using:
        foreign_key_constraint_on:
          column: day
          table:
            schema: insights
            name: date
    - name: rewardHistories
      using:
        manual_configuration:
          remote_table:
            schema: crm
            name: rewardHistoryView
          column_mapping:
            dayNumber: rewardday
- table:
    schema: insights
    name: hour
  array_relationships:
    - name: rewardHistories
      using:
        manual_configuration:
          remote_table:
            schema: crm
            name: rewardHistoryView
          column_mapping:
            hour: rewardhour
- table:
    schema: insights
    name: insights
  configuration:
    custom_root_fields:
      select_by_pk: insight
    custom_column_names: {}
  array_relationships:
    - name: apps_modules
      using:
        foreign_key_constraint_on:
          column: insightIdentifier
          table:
            schema: insights
            name: app_module_insight
    - name: charts
      using:
        foreign_key_constraint_on:
          column: insightIdentifier
          table:
            schema: insights
            name: chart
- table:
    schema: insights
    name: inventory_product_transaction
  object_relationships:
    - name: inventoryProduct
      using:
        manual_configuration:
          remote_table:
            schema: products
            name: inventoryProduct
          column_mapping:
            inventoryProductId: id
- table:
    schema: insights
    name: mealkit_product_transaction
- table:
    schema: insights
    name: month
  array_relationships:
    - name: rewardHistories
      using:
        manual_configuration:
          remote_table:
            schema: crm
            name: rewardHistoryView
          column_mapping:
            number: rewardmonth
- table:
    schema: insights
    name: ready_to_eat_product_transaction
- table:
    schema: insights
    name: simple_recipe_sale_meal_kit
  object_relationships:
    - name: recipe
      using:
        manual_configuration:
          remote_table:
            schema: simpleRecipe
            name: simpleRecipe
          column_mapping:
            simpleRecipeId: id
- table:
    schema: insights
    name: simple_recipe_sale_ready_to_eat
  object_relationships:
    - name: recipe
      using:
        manual_configuration:
          remote_table:
            schema: simpleRecipe
            name: simpleRecipe
          column_mapping:
            simpleRecipeId: id
- table:
    schema: insights
    name: test
- table:
    schema: insights
    name: test1
- table:
    schema: insights
    name: test2
- table:
    schema: insights
    name: test3
- table:
    schema: insights
    name: test4
- table:
    schema: insights
    name: test5
  array_relationships:
    - name: customers
      using:
        manual_configuration:
          remote_table:
            schema: crm
            name: customer
          column_mapping:
            source: source
- table:
    schema: inventory
    name: bulkItem
  configuration:
    custom_root_fields:
      insert: createBulkItem
      select_aggregate: bulkItemsAggregate
      select_by_pk: bulkItem
      select: bulkItems
      delete: deleteBulkItem
      update: updateBulkItem
    custom_column_names: {}
  object_relationships:
    - name: processing
      using:
        foreign_key_constraint_on: processingName
    - name: supplierItem
      using:
        foreign_key_constraint_on: supplierItemId
    - name: unitId
      using:
        foreign_key_constraint_on: unit
  array_relationships:
    - name: bulkItemHistories
      using:
        foreign_key_constraint_on:
          column: bulkItemId
          table:
            schema: inventory
            name: bulkItemHistory
    - name: modeOfFulfillments
      using:
        foreign_key_constraint_on:
          column: bulkItemId
          table:
            schema: ingredient
            name: modeOfFulfillment
    - name: orderSachets
      using:
        foreign_key_constraint_on:
          column: bulkItemId
          table:
            schema: order
            name: orderSachet
    - name: purchaseOrderItems
      using:
        foreign_key_constraint_on:
          column: bulkItemId
          table:
            schema: inventory
            name: purchaseOrderItem
    - name: sachetItems
      using:
        foreign_key_constraint_on:
          column: bulkItemId
          table:
            schema: inventory
            name: sachetItem
    - name: sachetWorkOrders
      using:
        foreign_key_constraint_on:
          column: inputBulkItemId
          table:
            schema: inventory
            name: sachetWorkOrder
    - name: unitConversions
      using:
        foreign_key_constraint_on:
          column: bulkItemId
          table:
            schema: inventory
            name: unitConversionByBulkItem
    - name: workOrdersAsInput
      using:
        foreign_key_constraint_on:
          column: inputBulkItemId
          table:
            schema: inventory
            name: bulkWorkOrder
    - name: workOrdersAsOutput
      using:
        foreign_key_constraint_on:
          column: outputBulkItemId
          table:
            schema: inventory
            name: bulkWorkOrder
  event_triggers:
    - name: bulkItemUpdate
      definition:
        enable_manual: false
        update:
          columns:
            - onHand
            - isAvailable
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_BULK_ITEM_UPDATE
- table:
    schema: inventory
    name: bulkItemHistory
  configuration:
    custom_root_fields:
      insert: createBulkItemHistory
      select_aggregate: bulkItemHistoriesAggregate
      select_by_pk: bulkItemHistory
      select: bulkItemHistories
      delete: deleteBulkItemHistory
      update: updateBulkItemHistory
    custom_column_names: {}
  object_relationships:
    - name: bulkItem
      using:
        foreign_key_constraint_on: bulkItemId
    - name: bulkWorkOrder
      using:
        foreign_key_constraint_on: bulkWorkOrderId
    - name: orderSachet
      using:
        foreign_key_constraint_on: orderSachetId
    - name: purchaseOrderItem
      using:
        foreign_key_constraint_on: purchaseOrderItemId
    - name: sachetWorkOrder
      using:
        foreign_key_constraint_on: sachetWorkOrderId
    - name: unitId
      using:
        foreign_key_constraint_on: unit
  event_triggers:
    - name: BulkItemHistoryCreateUpdate
      definition:
        enable_manual: true
        insert:
          columns: "*"
        update:
          columns:
            - bulkItemId
            - bulkWorkOrderId
            - id
            - orderSachetId
            - purchaseOrderItemId
            - comment
            - quantity
            - status
            - unit
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_BULK_ITEM_HISTORY_UPSERT
- table:
    schema: inventory
    name: bulkWorkOrder
  configuration:
    custom_root_fields:
      insert: createBulkWorkOrder
      select_aggregate: bulkWorkOrdersAggregate
      select_by_pk: bulkWorkOrder
      select: bulkWorkOrders
      delete: deleteBulkWorkOrder
      update: updateBulkWorkOrder
    custom_column_names: {}
  object_relationships:
    - name: inputBulkItem
      using:
        foreign_key_constraint_on: inputBulkItemId
    - name: inputQuantityUnitId
      using:
        foreign_key_constraint_on: inputQuantityUnit
    - name: outputBulkItem
      using:
        foreign_key_constraint_on: outputBulkItemId
    - name: station
      using:
        foreign_key_constraint_on: stationId
    - name: supplierItem
      using:
        foreign_key_constraint_on: supplierItemId
    - name: user
      using:
        foreign_key_constraint_on: userId
  array_relationships:
    - name: bulkItemHistories
      using:
        foreign_key_constraint_on:
          column: bulkWorkOrderId
          table:
            schema: inventory
            name: bulkItemHistory
  event_triggers:
    - name: BulkWorkOrderCreateUpdate
      definition:
        enable_manual: true
        insert:
          columns: "*"
        update:
          columns:
            - id
            - inputBulkItemId
            - outputBulkItemId
            - userId
            - inputQuantity
            - outputQuantity
            - inputQuantityUnit
            - status
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_BULK_WORK_ORDER_HISTORY_UPSERT
- table:
    schema: inventory
    name: packagingHistory
  object_relationships:
    - name: packaging
      using:
        foreign_key_constraint_on: packagingId
    - name: purchaseOrderItem
      using:
        foreign_key_constraint_on: purchaseOrderItemId
  event_triggers:
    - name: packagingHistory
      definition:
        enable_manual: true
        insert:
          columns: "*"
        update:
          columns:
            - id
            - packagingId
            - purchaseOrderItemId
            - quantity
            - status
            - unit
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_PACKAGING_HISTORY_UPSERT
- table:
    schema: inventory
    name: purchaseOrderItem
  configuration:
    custom_root_fields:
      insert: createPurchaseOrderItem
      select_aggregate: purchaseOrderItemsAggregate
      select_by_pk: purchaseOrderItem
      select: purchaseOrderItems
      delete: deletePurchaseOrderItem
      update: updatePurchaseOrderItem
    custom_column_names: {}
  object_relationships:
    - name: bulkItem
      using:
        foreign_key_constraint_on: bulkItemId
    - name: packaging
      using:
        foreign_key_constraint_on: packagingId
    - name: supplier
      using:
        foreign_key_constraint_on: supplierId
    - name: supplierItem
      using:
        foreign_key_constraint_on: supplierItemId
    - name: unitId
      using:
        foreign_key_constraint_on: unit
  array_relationships:
    - name: packagingHistories
      using:
        foreign_key_constraint_on:
          column: purchaseOrderItemId
          table:
            schema: inventory
            name: packagingHistory
  event_triggers:
    - name: purchaseOrderItemCreateUpdate
      definition:
        enable_manual: true
        update:
          columns:
            - bulkItemId
            - id
            - mandiPurchaseOrderItemId
            - packagingId
            - supplierId
            - supplierItemId
            - details
            - orderQuantity
            - status
            - unit
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_PURCHASE_ORDER_ITEM_UPSERT
- table:
    schema: inventory
    name: sachetItem
  configuration:
    custom_root_fields:
      insert: createSachetItem
      select_aggregate: sachetItemsAggregate
      select_by_pk: sachetItem
      select: sachetItems
      delete: deleteSachetItem
      update: updateSachetItem
    custom_column_names: {}
  object_relationships:
    - name: bulkItem
      using:
        foreign_key_constraint_on: bulkItemId
    - name: unitId
      using:
        foreign_key_constraint_on: unit
  array_relationships:
    - name: inventoryProducts
      using:
        foreign_key_constraint_on:
          column: sachetItemId
          table:
            schema: products
            name: inventoryProduct
    - name: modeOfFulfillments
      using:
        foreign_key_constraint_on:
          column: sachetItemId
          table:
            schema: ingredient
            name: modeOfFulfillment
    - name: orderSachets
      using:
        foreign_key_constraint_on:
          column: sachetItemId
          table:
            schema: order
            name: orderSachet
    - name: sachetItemHistories
      using:
        foreign_key_constraint_on:
          column: sachetItemId
          table:
            schema: inventory
            name: sachetItemHistory
    - name: sachetWorkOrders
      using:
        foreign_key_constraint_on:
          column: outputSachetItemId
          table:
            schema: inventory
            name: sachetWorkOrder
  event_triggers:
    - name: sachetItemUpdate
      definition:
        enable_manual: false
        update:
          columns:
            - isAvailable
            - onHand
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_BULK_ITEM_UPDATE
- table:
    schema: inventory
    name: sachetItemHistory
  configuration:
    custom_root_fields:
      insert: createSachetItemHistory
      select_aggregate: sachetItemHistoriesAggregate
      select_by_pk: sachetItemHistory
      select: sachetItemHistories
      delete: deleteSachetItemHistory
      update: updateSachetItemHistory
    custom_column_names: {}
  object_relationships:
    - name: orderSachet
      using:
        foreign_key_constraint_on: orderSachetId
    - name: sachetItem
      using:
        foreign_key_constraint_on: sachetItemId
    - name: sachetWorkOrder
      using:
        foreign_key_constraint_on: sachetWorkOrderId
    - name: unitId
      using:
        foreign_key_constraint_on: unit
  event_triggers:
    - name: SachetItemHistoryCreateUpdate
      definition:
        enable_manual: true
        insert:
          columns: "*"
        update:
          columns:
            - id
            - orderSachetId
            - sachetItemId
            - sachetWorkOrderId
            - quantity
            - status
            - unit
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_SACHET_HISTORY_UPSERT
- table:
    schema: inventory
    name: sachetWorkOrder
  configuration:
    custom_root_fields:
      insert: createSachetWorkOrder
      select_aggregate: sachetWorkOrdersAggregate
      select_by_pk: sachetWorkOrder
      select: sachetWorkOrders
      delete: deleteSachetWorkOrder
      update: updateSachetWorkOrder
    custom_column_names: {}
  object_relationships:
    - name: bulkItem
      using:
        foreign_key_constraint_on: inputBulkItemId
    - name: outputSachetItem
      using:
        foreign_key_constraint_on: outputSachetItemId
    - name: packaging
      using:
        foreign_key_constraint_on: packagingId
    - name: station
      using:
        foreign_key_constraint_on: stationId
    - name: supplierItem
      using:
        foreign_key_constraint_on: supplierItemId
    - name: user
      using:
        foreign_key_constraint_on: userId
  array_relationships:
    - name: bulkItemHistories
      using:
        foreign_key_constraint_on:
          column: sachetWorkOrderId
          table:
            schema: inventory
            name: bulkItemHistory
    - name: sachetItemHistories
      using:
        foreign_key_constraint_on:
          column: sachetWorkOrderId
          table:
            schema: inventory
            name: sachetItemHistory
  event_triggers:
    - name: SachetWorkOrderCreateUpdate
      definition:
        enable_manual: true
        insert:
          columns: "*"
        update:
          columns:
            - id
            - inputBulkItemId
            - outputSachetItemId
            - stationId
            - userId
            - inputQuantity
            - outputQuantity
            - status
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_SACHET_WORK_ORDER_UPSERT
- table:
    schema: inventory
    name: supplier
  configuration:
    custom_root_fields:
      insert: createSupplier
      select_aggregate: suppliersAggregate
      select_by_pk: supplier
      select: suppliers
      delete: deleteSupplier
      update: updateSupplier
    custom_column_names: {}
  object_relationships:
    - name: importHistory
      using:
        foreign_key_constraint_on: importId
  array_relationships:
    - name: packagings
      using:
        foreign_key_constraint_on:
          column: supplierId
          table:
            schema: packaging
            name: packaging
    - name: purchaseOrderItems
      using:
        foreign_key_constraint_on:
          column: supplierId
          table:
            schema: inventory
            name: purchaseOrderItem
    - name: supplierItems
      using:
        foreign_key_constraint_on:
          column: supplierId
          table:
            schema: inventory
            name: supplierItem
- table:
    schema: inventory
    name: supplierItem
  configuration:
    custom_root_fields:
      insert: createSupplierItem
      select_aggregate: supplierItemsAggregate
      select_by_pk: supplierItem
      select: supplierItems
      delete: deleteSupplierItem
      update: updateSupplierItem
    custom_column_names: {}
  object_relationships:
    - name: bulkItemAsShipped
      using:
        manual_configuration:
          remote_table:
            schema: inventory
            name: bulkItem
          column_mapping:
            bulkItemAsShippedId: id
    - name: importHistory
      using:
        foreign_key_constraint_on: importId
    - name: supplier
      using:
        foreign_key_constraint_on: supplierId
    - name: unitId
      using:
        foreign_key_constraint_on: unit
  array_relationships:
    - name: bulkItems
      using:
        foreign_key_constraint_on:
          column: supplierItemId
          table:
            schema: inventory
            name: bulkItem
    - name: purchaseOrderItems
      using:
        foreign_key_constraint_on:
          column: supplierItemId
          table:
            schema: inventory
            name: purchaseOrderItem
- table:
    schema: inventory
    name: unitConversionByBulkItem
  configuration:
    custom_root_fields:
      insert: createUnitConversionByBulkItem
      select_aggregate: unitConversionByBulkItemsAggregate
      select_by_pk: unitConversionByBulkItem
      select: unitConversionByBulkItems
      delete: deleteUnitConversionByBulkItem
      update: updateUnitConversionByBulkItem
    custom_column_names: {}
  object_relationships:
    - name: bulkItem
      using:
        foreign_key_constraint_on: bulkItemId
    - name: unitConversion
      using:
        foreign_key_constraint_on: unitConversionId
- table:
    schema: master
    name: accompanimentType
  configuration:
    custom_root_fields:
      insert: createAccompaniments
      select_aggregate: accompanimentsAggregate
      insert_one: createAccompaniment
      select_by_pk: accompaniment
      select: accompaniments
      delete: deleteAccompaniments
      update: updateAccompaniments
      delete_by_pk: deleteAccompaniment
      update_by_pk: updateAccompaniment
    custom_column_names: {}
- table:
    schema: master
    name: allergenName
  configuration:
    custom_root_fields:
      insert: createMasterAllergen
      select_aggregate: masterAllergensAggregate
      select_by_pk: masterAllergen
      select: masterAllergens
      delete: deleteMasterAllergen
      update: updateMasterAllergen
    custom_column_names: {}
- table:
    schema: master
    name: cuisineName
  configuration:
    custom_root_fields:
      insert: createCuisineName
      select_aggregate: cuisineNamesAggregate
      select_by_pk: cuisineName
      select: cuisineNames
      delete: deleteCuisineName
      update: updateCuisineName
    custom_column_names: {}
  array_relationships:
    - name: simpleRecipes
      using:
        foreign_key_constraint_on:
          column: cuisine
          table:
            schema: simpleRecipe
            name: simpleRecipe
- table:
    schema: master
    name: processingName
  configuration:
    custom_root_fields:
      insert: createMasterProcessing
      select_aggregate: masterProcessingsAggregate
      select_by_pk: masterProcessing
      select: masterProcessings
      delete: deleteMasterProcessing
      update: updateMasterProcessing
    custom_column_names: {}
  array_relationships:
    - name: bulkItems
      using:
        foreign_key_constraint_on:
          column: processingName
          table:
            schema: inventory
            name: bulkItem
    - name: ingredientProcessings
      using:
        foreign_key_constraint_on:
          column: processingName
          table:
            schema: ingredient
            name: ingredientProcessing
- table:
    schema: master
    name: productCategory
  configuration:
    custom_root_fields:
      insert: insertProductCategories
      select_aggregate: productCategoriesAggregate
      insert_one: insertProductCategory
      select_by_pk: productCategory
      select: productCategories
      delete: deleteProductCategory
      update: updateProductCategories
      delete_by_pk: deleteProductCategories
      update_by_pk: updateProductCategory
    custom_column_names: {}
  array_relationships:
    - name: collections
      using:
        foreign_key_constraint_on:
          column: productCategoryName
          table:
            schema: onDemand
            name: collection_productCategory
    - name: subscriptionOccurenceProducts
      using:
        foreign_key_constraint_on:
          column: productCategory
          table:
            schema: subscription
            name: subscriptionOccurence_product
- table:
    schema: master
    name: unit
  configuration:
    custom_root_fields:
      insert: createUnit
      select_aggregate: unitsAggregate
      select_by_pk: unit
      select: units
      delete: deleteUnit
      update: updateUnit
    custom_column_names: {}
  array_relationships:
    - name: bulkItemHistories
      using:
        foreign_key_constraint_on:
          column: unit
          table:
            schema: inventory
            name: bulkItemHistory
    - name: bulkItems
      using:
        foreign_key_constraint_on:
          column: unit
          table:
            schema: inventory
            name: bulkItem
    - name: bulkWorkOrders
      using:
        foreign_key_constraint_on:
          column: inputQuantityUnit
          table:
            schema: inventory
            name: bulkWorkOrder
    - name: ingredientSachets
      using:
        foreign_key_constraint_on:
          column: unit
          table:
            schema: ingredient
            name: ingredientSachet
    - name: inputUnitConversions
      using:
        foreign_key_constraint_on:
          column: inputUnitName
          table:
            schema: master
            name: unitConversion
    - name: orderSachets
      using:
        foreign_key_constraint_on:
          column: unit
          table:
            schema: order
            name: orderSachet
    - name: outputUnitConversions
      using:
        foreign_key_constraint_on:
          column: outputUnitName
          table:
            schema: master
            name: unitConversion
    - name: purchaseOrderItems
      using:
        foreign_key_constraint_on:
          column: unit
          table:
            schema: inventory
            name: purchaseOrderItem
    - name: sachetItems
      using:
        foreign_key_constraint_on:
          column: unit
          table:
            schema: inventory
            name: sachetItem
    - name: supplierItems
      using:
        foreign_key_constraint_on:
          column: unit
          table:
            schema: inventory
            name: supplierItem
- table:
    schema: master
    name: unitConversion
  configuration:
    custom_root_fields:
      insert: createUnitConversion
      select_aggregate: unitConversionsAggregate
      select_by_pk: unitConversion
      select: unitConversions
      delete: deleteUnitConversion
      update: updateUnitConversion
    custom_column_names: {}
  object_relationships:
    - name: inputUnit
      using:
        foreign_key_constraint_on: outputUnitName
    - name: outputUnit
      using:
        foreign_key_constraint_on: inputUnitName
  array_relationships:
    - name: unitConversionByBulkItems
      using:
        foreign_key_constraint_on:
          column: unitConversionId
          table:
            schema: inventory
            name: unitConversionByBulkItem
- table:
    schema: notifications
    name: displayNotification
  configuration:
    custom_root_fields:
      insert: createDisplayNotifications
      select_aggregate: displayNotificationsAggregate
      insert_one: createDisplayNotification
      select_by_pk: displayNotification
      select: displayNotifications
      delete: deleteDisplayNotifications
      update: updateDisplayNotifications
      delete_by_pk: deleteDisplayNotification
      update_by_pk: updateDisplayNotification
    custom_column_names: {}
  object_relationships:
    - name: type
      using:
        foreign_key_constraint_on: typeId
- table:
    schema: notifications
    name: emailConfig
  configuration:
    custom_root_fields:
      insert: createNotificationEmailConfigs
      select_aggregate: notificationEmailConfigsAggregate
      insert_one: createNotificationEmailConfig
      select_by_pk: notificationEmailConfig
      select: notificationEmailConfigs
      delete: deleteNotificationEmailConfigs
      update: updateNotificationEmailConfigs
      delete_by_pk: deleteNotificationEmailConfig
      update_by_pk: updateNotificationEmailConfig
    custom_column_names: {}
  object_relationships:
    - name: type
      using:
        foreign_key_constraint_on: typeId
- table:
    schema: notifications
    name: printConfig
  object_relationships:
    - name: printer
      using:
        foreign_key_constraint_on: printerPrintNodeId
    - name: type
      using:
        foreign_key_constraint_on: typeId
- table:
    schema: notifications
    name: smsConfig
  configuration:
    custom_root_fields:
      insert: createNotificationSmsConfigs
      select_aggregate: notificationSmsConfigsAggregate
      insert_one: createNotificationSmsConfig
      select_by_pk: notificationSmsConfig
      select: notificationSmsConfigs
      delete: deleteNotificationSmsConfigs
      update: updateNotificationSmsConfigs
      delete_by_pk: deleteNotificationSmsConfig
      update_by_pk: updateNotificationSmsConfig
    custom_column_names: {}
  object_relationships:
    - name: type
      using:
        foreign_key_constraint_on: typeId
- table:
    schema: notifications
    name: type
  configuration:
    custom_root_fields:
      insert: createNotificationTypes
      select_aggregate: notificationTypesAggregate
      insert_one: createNotificationType
      select_by_pk: notificationType
      select: notificationTypes
      delete: deleteNotificationTypes
      update: updateNotificationTypes
      delete_by_pk: deleteNotificationType
      update_by_pk: updateNotificationType
    custom_column_names: {}
  array_relationships:
    - name: displayNotifications
      using:
        foreign_key_constraint_on:
          column: typeId
          table:
            schema: notifications
            name: displayNotification
    - name: emailConfigs
      using:
        foreign_key_constraint_on:
          column: typeId
          table:
            schema: notifications
            name: emailConfig
    - name: printConfigs
      using:
        foreign_key_constraint_on:
          column: typeId
          table:
            schema: notifications
            name: printConfig
    - name: smsConfigs
      using:
        foreign_key_constraint_on:
          column: typeId
          table:
            schema: notifications
            name: smsConfig
  event_triggers:
    - name: createNotificationTrigger
      definition:
        enable_manual: false
        update:
          columns:
            - isActive
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_CREATE_NOTIFICATION_TRIGGER
- table:
    schema: onDemand
    name: brand_collection
  configuration:
    custom_root_fields:
      insert: createBrandCollections
      select_aggregate: brandCollectionsAggregate
      insert_one: createBrandCollection
      select_by_pk: brandCollection
      select: brandCollections
      delete: deleteBrandCollections
      update: updateBrandCollections
      delete_by_pk: deleteBrandCollection
      update_by_pk: updateBrandCollection
    custom_column_names: {}
  object_relationships:
    - name: brand
      using:
        foreign_key_constraint_on: brandId
    - name: collection
      using:
        foreign_key_constraint_on: collectionId
- table:
    schema: onDemand
    name: category
- table:
    schema: onDemand
    name: collection
  configuration:
    custom_root_fields:
      insert: createCollections
      select_aggregate: collectionsAggregate
      insert_one: createCollection
      select_by_pk: collection
      select: collections
      delete: deleteCollections
      update: updateCollections
      delete_by_pk: deleteCollection
      update_by_pk: updateCollection
    custom_column_names: {}
  object_relationships:
    - name: details
      using:
        manual_configuration:
          remote_table:
            schema: onDemand
            name: collectionDetails
          column_mapping:
            id: id
  array_relationships:
    - name: brands
      using:
        foreign_key_constraint_on:
          column: collectionId
          table:
            schema: onDemand
            name: brand_collection
    - name: productCategories
      using:
        foreign_key_constraint_on:
          column: collectionId
          table:
            schema: onDemand
            name: collection_productCategory
- table:
    schema: onDemand
    name: collectionDetails
  object_relationships:
    - name: collection
      using:
        manual_configuration:
          remote_table:
            schema: onDemand
            name: collection
          column_mapping:
            id: id
- table:
    schema: onDemand
    name: collection_productCategory
  configuration:
    custom_root_fields:
      insert: createCollectionProductCategories
      select_aggregate: collectionProductCategoriesAggregate
      insert_one: createCollectionProductCategory
      select_by_pk: collectionProductCategory
      select: collectionProductCategories
      delete: deleteCollectionProductCategories
      update: updateCollectionProductCategories
      delete_by_pk: deleteCollectionProductCategory
      update_by_pk: updateCollectionProductCategory
    custom_column_names: {}
  object_relationships:
    - name: collection
      using:
        foreign_key_constraint_on: collectionId
    - name: productCategory
      using:
        foreign_key_constraint_on: productCategoryName
  array_relationships:
    - name: products
      using:
        foreign_key_constraint_on:
          column: collection_productCategoryId
          table:
            schema: onDemand
            name: collection_productCategory_product
- table:
    schema: onDemand
    name: collection_productCategory_product
  configuration:
    custom_root_fields:
      insert: createCollectionProductCategoryProducts
      select_aggregate: collectionProductCategoryProductsAggregate
      insert_one: createCollectionProductCategoryProduct
      select_by_pk: collectionProductCategoryProduct
      select: collectionProductCategoryProducts
      delete: deleteCollectionProductCategoryProducts
      update: updateCollectionProductCategoryProducts
      delete_by_pk: deleteCollectionProductCategoryProduct
      update_by_pk: updateCollectionProductCategoryProduct
    custom_column_names: {}
  object_relationships:
    - name: collection_productCategory
      using:
        foreign_key_constraint_on: collection_productCategoryId
    - name: comboProduct
      using:
        foreign_key_constraint_on: comboProductId
    - name: customizableProduct
      using:
        foreign_key_constraint_on: customizableProductId
    - name: inventoryProduct
      using:
        foreign_key_constraint_on: inventoryProductId
    - name: simpleRecipeProduct
      using:
        foreign_key_constraint_on: simpleRecipeProductId
  computed_fields:
    - name: data
      definition:
        function:
          schema: onDemand
          name: getProductDetails
      comment: ""
- table:
    schema: onDemand
    name: menu
- table:
    schema: onDemand
    name: menuData
- table:
    schema: onDemand
    name: modifier
  configuration:
    custom_root_fields:
      insert: createModifiers
      select_aggregate: modifiersAggregate
      insert_one: createModifier
      select_by_pk: modifier
      select: modifiers
      delete: deleteModifiers
      update: updateModifiers
      delete_by_pk: deleteModifier
      update_by_pk: updateModifier
    custom_column_names: {}
  array_relationships:
    - name: inventoryProductOptions
      using:
        foreign_key_constraint_on:
          column: modifierId
          table:
            schema: products
            name: inventoryProductOption
    - name: simpleRecipeProductOptions
      using:
        foreign_key_constraint_on:
          column: modifierId
          table:
            schema: products
            name: simpleRecipeProductOption
- table:
    schema: onDemand
    name: storeData
- table:
    schema: onlineStore
    name: menuCollection
  configuration:
    custom_root_fields:
      insert: createMenuCollection
      select_aggregate: menuCollectionsAggregate
      select_by_pk: menuCollection
      select: menuCollections
      delete: deleteMenuCollection
      update: updateMenuCollection
    custom_column_names: {}
- table:
    schema: onlineStore
    name: productSku
  array_relationships:
    - name: comboProducts
      using:
        foreign_key_constraint_on:
          column: productSku
          table:
            schema: products
            name: comboProduct
    - name: customizableProducts
      using:
        foreign_key_constraint_on:
          column: productSku
          table:
            schema: products
            name: customizableProduct
    - name: inventoryProducts
      using:
        foreign_key_constraint_on:
          column: productSku
          table:
            schema: products
            name: inventoryProduct
    - name: simpleRecipeProducts
      using:
        foreign_key_constraint_on:
          column: productSku
          table:
            schema: products
            name: simpleRecipeProduct
- table:
    schema: onlineStore
    name: rmkCollection
  computed_fields:
    - name: isValid
      definition:
        function:
          schema: onlineStore
          name: isrmkcollectionvalid
      comment: ""
- table:
    schema: order
    name: assemblyEnum
  array_relationships:
    - name: orderSimpleRecipeProducts
      using:
        foreign_key_constraint_on:
          column: assemblyStatus
          table:
            schema: order
            name: orderMealKitProduct
- table:
    schema: order
    name: order
  configuration:
    custom_root_fields:
      insert: createOrders
      select_aggregate: ordersAggregate
      insert_one: createOrder
      select_by_pk: order
      select: orders
      delete: deleteOrders
      update: updateOrders
      delete_by_pk: deleteOrder
      update_by_pk: updateOrder
    custom_column_names: {}
  object_relationships:
    - name: brand
      using:
        foreign_key_constraint_on: brandId
    - name: customer
      using:
        foreign_key_constraint_on: keycloakId
    - name: deliveryService
      using:
        foreign_key_constraint_on: deliveryPartnershipId
    - name: orderCart
      using:
        manual_configuration:
          remote_table:
            schema: crm
            name: orderCart
          column_mapping:
            id: orderId
    - name: orderDate
      using:
        manual_configuration:
          remote_table:
            schema: insights
            name: date
          column_mapping:
            created_at: date
    - name: thirdPartyOrder
      using:
        foreign_key_constraint_on: thirdPartyOrderId
  array_relationships:
    - name: orderInventoryProducts
      using:
        foreign_key_constraint_on:
          column: orderId
          table:
            schema: order
            name: orderInventoryProduct
    - name: orderMealKitProducts
      using:
        foreign_key_constraint_on:
          column: orderId
          table:
            schema: order
            name: orderMealKitProduct
    - name: orderReadyToEatProducts
      using:
        foreign_key_constraint_on:
          column: orderId
          table:
            schema: order
            name: orderReadyToEatProduct
    - name: rewardHistories
      using:
        foreign_key_constraint_on:
          column: orderId
          table:
            schema: crm
            name: rewardHistory
  computed_fields:
    - name: summary
      definition:
        function:
          schema: order
          name: ordersummary
      comment: ""
  event_triggers:
    - name: createDelivery
      definition:
        enable_manual: true
        update:
          columns:
            - deliveryPartnershipId
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_CREATE_DELIVERY
      headers:
        - name: OrganizationId
          value_from_env: HEADER_REMOTE_SCHEMA_ORGANIZATIONID
    - name: handleOrderStatus
      definition:
        enable_manual: true
        update:
          columns:
            - isAccepted
            - isRejected
            - orderStatus
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook: https://test.dailykit.org/server/api/order/status
    - name: Order_Created
      definition:
        enable_manual: false
        insert:
          columns: "*"
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_DEFAULT_NOTIFICATION_HANDLER
    - name: printKOT
      definition:
        enable_manual: true
        update:
          columns:
            - orderStatus
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_PRINT_KOT
- table:
    schema: order
    name: orderInventoryProduct
  configuration:
    custom_root_fields:
      insert: createOrderInventoryProducts
      select_aggregate: orderInventoryProductsAggregate
      insert_one: createOrderInventoryProduct
      select_by_pk: orderInventoryProduct
      select: orderInventoryProducts
      delete: deleteOrderInventoryProducts
      update: updateOrderInventoryProducts
      delete_by_pk: deleteOrderInventoryProduct
      update_by_pk: updateOrderInventoryProduct
    custom_column_names: {}
  object_relationships:
    - name: assemblyStation
      using:
        foreign_key_constraint_on: assemblyStationId
    - name: comboProduct
      using:
        foreign_key_constraint_on: comboProductId
    - name: comboProductComponent
      using:
        foreign_key_constraint_on: comboProductComponentId
    - name: customizableProduct
      using:
        foreign_key_constraint_on: customizableProductId
    - name: customizableProductOption
      using:
        foreign_key_constraint_on: customizableProductOptionId
    - name: inventoryProduct
      using:
        foreign_key_constraint_on: inventoryProductId
    - name: inventoryProductOption
      using:
        foreign_key_constraint_on: inventoryProductOptionId
    - name: order
      using:
        foreign_key_constraint_on: orderId
    - name: orderModifierRef
      using:
        foreign_key_constraint_on: orderModifierId
    - name: packaging
      using:
        foreign_key_constraint_on: packagingId
  array_relationships:
    - name: orderModifiers
      using:
        foreign_key_constraint_on:
          column: orderInventoryProductId
          table:
            schema: order
            name: orderModifier
    - name: orderSachets
      using:
        manual_configuration:
          remote_table:
            schema: order
            name: orderSachet
          column_mapping:
            id: orderInventoryProductId
  computed_fields:
    - name: hasModifiers
      definition:
        function:
          schema: order
          name: inventory_has_modifiers
      comment: ""
  event_triggers:
    - name: printOrderInventoryProductLabel
      definition:
        enable_manual: true
        update:
          columns:
            - assemblyStatus
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_PRINT_PRODUCT_LABEL
- table:
    schema: order
    name: orderMealKitProduct
  configuration:
    custom_root_fields:
      insert: createOrderMealKitProducts
      select_aggregate: orderMealKitProductsAggregate
      insert_one: createOrderMealKitProduct
      select_by_pk: orderMealKitProduct
      select: orderMealKitProducts
      delete: deleteOrderMealKitProducts
      update: updateOrderMealKitProducts
      delete_by_pk: deleteOrderMealKitProduct
      update_by_pk: updateOrderMealKitProduct
    custom_column_names: {}
  object_relationships:
    - name: assemblyEnum
      using:
        foreign_key_constraint_on: assemblyStatus
    - name: assemblyStation
      using:
        foreign_key_constraint_on: assemblyStationId
    - name: comboProduct
      using:
        foreign_key_constraint_on: comboProductId
    - name: comboProductComponent
      using:
        foreign_key_constraint_on: comboProductComponentId
    - name: customizableProduct
      using:
        foreign_key_constraint_on: customizableProductId
    - name: customizableProductOption
      using:
        foreign_key_constraint_on: customizableProductOptionId
    - name: labelTemplate
      using:
        foreign_key_constraint_on: labelTemplateId
    - name: order
      using:
        foreign_key_constraint_on: orderId
    - name: orderModifierRef
      using:
        foreign_key_constraint_on: orderModifierId
    - name: packaging
      using:
        foreign_key_constraint_on: packagingId
    - name: simpleRecipeProduct
      using:
        foreign_key_constraint_on: simpleRecipeProductId
    - name: simpleRecipeProductOption
      using:
        foreign_key_constraint_on: simpleRecipeProductOptionId
  array_relationships:
    - name: orderModifiers
      using:
        foreign_key_constraint_on:
          column: orderMealKitProductId
          table:
            schema: order
            name: orderModifier
    - name: orderSachets
      using:
        foreign_key_constraint_on:
          column: orderMealKitProductId
          table:
            schema: order
            name: orderSachet
  computed_fields:
    - name: hasModifiers
      definition:
        function:
          schema: order
          name: mealkit_has_modifiers
      comment: ""
  event_triggers:
    - name: printOrderMealKitProductLabel
      definition:
        enable_manual: true
        update:
          columns:
            - assemblyStatus
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_PRINT_PRODUCT_LABEL
- table:
    schema: order
    name: orderModifier
  object_relationships:
    - name: parentOrderInventoryProduct
      using:
        foreign_key_constraint_on: orderInventoryProductId
    - name: parentOrderMealKitProduct
      using:
        foreign_key_constraint_on: orderMealKitProductId
    - name: parentOrderReadyToEatProduct
      using:
        foreign_key_constraint_on: orderReadyToEatProductId
  array_relationships:
    - name: childOrderInventoryProducts
      using:
        foreign_key_constraint_on:
          column: orderModifierId
          table:
            schema: order
            name: orderInventoryProduct
    - name: childOrderMealKitProducts
      using:
        foreign_key_constraint_on:
          column: orderModifierId
          table:
            schema: order
            name: orderMealKitProduct
    - name: childOrderReadyToEatProducts
      using:
        foreign_key_constraint_on:
          column: orderModifierId
          table:
            schema: order
            name: orderReadyToEatProduct
  event_triggers:
    - name: handleOrderModifier
      definition:
        enable_manual: true
        insert:
          columns: "*"
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook: https://test.dailykit.org/server/api/modifier
- table:
    schema: order
    name: orderPaymentStatusEnum
- table:
    schema: order
    name: orderReadyToEatProduct
  configuration:
    custom_root_fields:
      insert: createOrderReadyToEatProducts
      select_aggregate: orderReadyToEatProductsAggregate
      insert_one: createOrderReadyToEatProduct
      select_by_pk: orderReadyToEatProduct
      select: orderReadyToEatProducts
      delete: deleteOrderReadyToEatProducts
      update: updateOrderReadyToEatProducts
      delete_by_pk: deleteOrderReadyToEatProduct
      update_by_pk: updateOrderReadyToEatProduct
    custom_column_names: {}
  object_relationships:
    - name: assemblyStation
      using:
        foreign_key_constraint_on: assemblyStationId
    - name: comboProduct
      using:
        foreign_key_constraint_on: comboProductId
    - name: comboProductComponent
      using:
        foreign_key_constraint_on: comboProductComponentId
    - name: customizableProduct
      using:
        foreign_key_constraint_on: customizableProductId
    - name: customizableProductOption
      using:
        foreign_key_constraint_on: customizableProductOptionId
    - name: labelTemplate
      using:
        foreign_key_constraint_on: labelTemplateId
    - name: order
      using:
        foreign_key_constraint_on: orderId
    - name: packaging
      using:
        foreign_key_constraint_on: packagingId
    - name: simpleRecipe
      using:
        foreign_key_constraint_on: simpleRecipeId
    - name: simpleRecipeProduct
      using:
        foreign_key_constraint_on: simpleRecipeProductId
    - name: simpleRecipeProductOption
      using:
        foreign_key_constraint_on: simpleRecipeProductOptionId
  array_relationships:
    - name: orderModifiers
      using:
        foreign_key_constraint_on:
          column: orderReadyToEatProductId
          table:
            schema: order
            name: orderModifier
    - name: orderSachets
      using:
        manual_configuration:
          remote_table:
            schema: order
            name: orderSachet
          column_mapping:
            id: orderReadyToEatProductId
  computed_fields:
    - name: hasModifiers
      definition:
        function:
          schema: order
          name: readytoeat_has_modifiers
      comment: ""
  event_triggers:
    - name: printOrderReadyToEatProductLabel
      definition:
        enable_manual: true
        update:
          columns:
            - assemblyStatus
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_PRINT_PRODUCT_LABEL
- table:
    schema: order
    name: orderSachet
  configuration:
    custom_root_fields:
      insert: createOrderSachets
      select_aggregate: orderSachetsAggregate
      insert_one: createOrderSachet
      select_by_pk: orderSachet
      select: orderSachets
      delete: deleteOrderSachets
      update: updateOrderSachets
      delete_by_pk: deleteOrderSachet
      update_by_pk: updateOrderSachet
    custom_column_names: {}
  object_relationships:
    - name: bulkItem
      using:
        foreign_key_constraint_on: bulkItemId
    - name: ingredientSachet
      using:
        foreign_key_constraint_on: ingredientSachetId
    - name: orderInventoryProduct
      using:
        manual_configuration:
          remote_table:
            schema: order
            name: orderInventoryProduct
          column_mapping:
            orderInventoryProductId: id
    - name: orderMealKitProduct
      using:
        foreign_key_constraint_on: orderMealKitProductId
    - name: orderModifierRef
      using:
        foreign_key_constraint_on: orderModifierId
    - name: orderReadyToEatProduct
      using:
        manual_configuration:
          remote_table:
            schema: order
            name: orderReadyToEatProduct
          column_mapping:
            orderReadyToEatProductId: id
    - name: packaging
      using:
        foreign_key_constraint_on: packagingId
    - name: packingStation
      using:
        foreign_key_constraint_on: packingStationId
    - name: sachetItem
      using:
        foreign_key_constraint_on: sachetItemId
    - name: unitId
      using:
        foreign_key_constraint_on: unit
  array_relationships:
    - name: bulkItemHistories
      using:
        foreign_key_constraint_on:
          column: orderSachetId
          table:
            schema: inventory
            name: bulkItemHistory
    - name: sachetItemHistories
      using:
        foreign_key_constraint_on:
          column: orderSachetId
          table:
            schema: inventory
            name: sachetItemHistory
  computed_fields:
    - name: isReadyForAssembly
      definition:
        function:
          schema: order
          name: isOrderReadyForAssembly
      comment: ""
    - name: isOrderAssembled
      definition:
        function:
          schema: order
          name: orderAssemblyStatus
      comment: ""
  event_triggers:
    - name: OrderSachetCreation
      definition:
        enable_manual: true
        insert:
          columns: "*"
        update:
          columns:
            - bulkItemId
            - ingredientSachetId
            - orderMealKitProductId
            - packagingId
            - sachetItemId
            - quantity
            - processingName
            - status
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_ORDER_SACHET_UPSERT
    - name: printOrderSachet
      definition:
        enable_manual: true
        update:
          columns:
            - isPortioned
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_PRINT_SACHET_LABEL
- table:
    schema: order
    name: orderSachetStatusEnum
- table:
    schema: order
    name: orderStatusEnum
  array_relationships:
    - name: orders
      using:
        manual_configuration:
          remote_table:
            schema: order
            name: order
          column_mapping:
            value: orderStatus
- table:
    schema: order
    name: thirdPartyOrder
  object_relationships:
    - name: order
      using:
        manual_configuration:
          remote_table:
            schema: order
            name: order
          column_mapping:
            id: thirdPartyOrderId
  remote_relationships:
    - definition:
        remote_field:
          marketPlaceHub_marketPlaceCompany_by_pk:
            arguments:
              title: $source
        hasura_fields:
          - source
        remote_schema: dailycloak
      name: thirdPartyCompany
  event_triggers:
    - name: handleThirdPartyOrders
      definition:
        enable_manual: true
        insert:
          columns: "*"
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook: https://08e085bb8270.ngrok.io/event/order/third-party
- table:
    schema: packaging
    name: packaging
  configuration:
    custom_root_fields:
      insert: createPackaging
      select_aggregate: packagingAggregate
      select_by_pk: packaging
      select: packagings
      delete: deletePackaging
      update: updatePackaging
    custom_column_names: {}
  object_relationships:
    - name: packagingSpecification
      using:
        foreign_key_constraint_on: packagingSpecificationsId
    - name: supplier
      using:
        foreign_key_constraint_on: supplierId
  array_relationships:
    - name: orderSachets
      using:
        foreign_key_constraint_on:
          column: packagingId
          table:
            schema: order
            name: orderSachet
    - name: purchaseOrderItems
      using:
        foreign_key_constraint_on:
          column: packagingId
          table:
            schema: inventory
            name: purchaseOrderItem
    - name: sachetWorkOrders
      using:
        foreign_key_constraint_on:
          column: packagingId
          table:
            schema: inventory
            name: sachetWorkOrder
  remote_relationships:
    - definition:
        remote_field:
          packagingHub_packaging_by_pk:
            arguments:
              id: $mandiPackagingId
        hasura_fields:
          - mandiPackagingId
        remote_schema: dailycloak
      name: mandiPackaging
- table:
    schema: packaging
    name: packagingSpecifications
- table:
    schema: products
    name: comboProduct
  configuration:
    custom_root_fields:
      insert: createComboProduct
      select_aggregate: comboProductsAggregate
      select_by_pk: comboProduct
      select: comboProducts
      delete: deleteComboProduct
      update: updateComboProduct
    custom_column_names: {}
  object_relationships:
    - name: productSkuReference
      using:
        foreign_key_constraint_on: productSku
  array_relationships:
    - name: comboProductComponents
      using:
        foreign_key_constraint_on:
          column: comboProductId
          table:
            schema: products
            name: comboProductComponent
    - name: orderInventoryProducts
      using:
        foreign_key_constraint_on:
          column: comboProductId
          table:
            schema: order
            name: orderInventoryProduct
    - name: orderMealKitProducts
      using:
        foreign_key_constraint_on:
          column: comboProductId
          table:
            schema: order
            name: orderMealKitProduct
    - name: orderReadyToEatProducts
      using:
        foreign_key_constraint_on:
          column: comboProductId
          table:
            schema: order
            name: orderReadyToEatProduct
  computed_fields:
    - name: defaultCartItem
      definition:
        function:
          schema: products
          name: defaultComboProductCartItem
      comment: ""
    - name: isValid
      definition:
        function:
          schema: products
          name: iscomboproductvalid
      comment: ""
- table:
    schema: products
    name: comboProductComponent
  configuration:
    custom_root_fields:
      insert: createComboProductComponent
      select_aggregate: comboProductComponentsAggregate
      select_by_pk: comboProductComponent
      select: comboProductComponents
      delete: deleteComboProductComponent
      update: updateComboProductComponent
    custom_column_names: {}
  object_relationships:
    - name: comboProduct
      using:
        foreign_key_constraint_on: comboProductId
    - name: customizableProduct
      using:
        foreign_key_constraint_on: customizableProductId
    - name: inventoryProduct
      using:
        foreign_key_constraint_on: inventoryProductId
    - name: simpleRecipeProduct
      using:
        foreign_key_constraint_on: simpleRecipeProductId
  array_relationships:
    - name: orderInventoryProducts
      using:
        foreign_key_constraint_on:
          column: comboProductComponentId
          table:
            schema: order
            name: orderInventoryProduct
    - name: orderMealKitProducts
      using:
        foreign_key_constraint_on:
          column: comboProductComponentId
          table:
            schema: order
            name: orderMealKitProduct
    - name: orderReadyToEatProducts
      using:
        foreign_key_constraint_on:
          column: comboProductComponentId
          table:
            schema: order
            name: orderReadyToEatProduct
  computed_fields:
    - name: basePrice
      definition:
        function:
          schema: products
          name: comboProductComponentBasePrice
      comment: ""
- table:
    schema: products
    name: customizableProduct
  configuration:
    custom_root_fields:
      insert: createCustomizableProduct
      select_aggregate: customizableProductsAggregate
      select_by_pk: customizableProduct
      select: customizableProducts
      delete: deleteCustomizableProduct
      update: updateCustomizableProduct
    custom_column_names: {}
  object_relationships:
    - name: defaultCustomizableProductOption
      using:
        foreign_key_constraint_on: default
    - name: productSkuReference
      using:
        foreign_key_constraint_on: productSku
  array_relationships:
    - name: comboProductComponents
      using:
        foreign_key_constraint_on:
          column: customizableProductId
          table:
            schema: products
            name: comboProductComponent
    - name: customizableProductOptions
      using:
        foreign_key_constraint_on:
          column: customizableProductId
          table:
            schema: products
            name: customizableProductOption
    - name: orderInventoryProducts
      using:
        foreign_key_constraint_on:
          column: customizableProductId
          table:
            schema: order
            name: orderInventoryProduct
    - name: orderMealKitProducts
      using:
        foreign_key_constraint_on:
          column: customizableProductId
          table:
            schema: order
            name: orderMealKitProduct
    - name: orderReadyToEatProducts
      using:
        foreign_key_constraint_on:
          column: customizableProductId
          table:
            schema: order
            name: orderReadyToEatProduct
  computed_fields:
    - name: defaultCartItem
      definition:
        function:
          schema: products
          name: defaultCustomizableProductCartItem
      comment: ""
    - name: isValid
      definition:
        function:
          schema: products
          name: iscustomizableproductvalid
      comment: ""
- table:
    schema: products
    name: customizableProductOption
  configuration:
    custom_root_fields:
      insert: createCustomizableProductOption
      select_aggregate: customizableProductOptionsAggregate
      select_by_pk: customizableProductOption
      select: customizableProductOptions
      delete: deleteCustomizableProductOption
      update: updateCustomizableProductOption
    custom_column_names: {}
  object_relationships:
    - name: customizableProduct
      using:
        foreign_key_constraint_on: customizableProductId
    - name: inventoryProduct
      using:
        foreign_key_constraint_on: inventoryProductId
    - name: simpleRecipeProduct
      using:
        foreign_key_constraint_on: simpleRecipeProductId
  array_relationships:
    - name: orderInventoryProducts
      using:
        foreign_key_constraint_on:
          column: customizableProductOptionId
          table:
            schema: order
            name: orderInventoryProduct
    - name: orderMealKitProducts
      using:
        foreign_key_constraint_on:
          column: customizableProductOptionId
          table:
            schema: order
            name: orderMealKitProduct
    - name: orderReadyToEatProducts
      using:
        foreign_key_constraint_on:
          column: customizableProductOptionId
          table:
            schema: order
            name: orderReadyToEatProduct
  computed_fields:
    - name: product
      definition:
        function:
          schema: products
          name: customizableProductOptionProduct
      comment: ""
    - name: fullName
      definition:
        function:
          schema: products
          name: customizableProductOptionFullName
      comment: ""
- table:
    schema: products
    name: inventoryProduct
  configuration:
    custom_root_fields:
      insert: createInventoryProduct
      select_aggregate: inventoryProductsAggregate
      select_by_pk: inventoryProduct
      select: inventoryProducts
      delete: deleteInventoryProduct
      update: updateInventoryProduct
    custom_column_names: {}
  object_relationships:
    - name: defaultInventoryProductOption
      using:
        foreign_key_constraint_on: default
    - name: productSkuReference
      using:
        foreign_key_constraint_on: productSku
    - name: sachetItem
      using:
        foreign_key_constraint_on: sachetItemId
    - name: supplierItem
      using:
        foreign_key_constraint_on: supplierItemId
  array_relationships:
    - name: comboProductComponents
      using:
        foreign_key_constraint_on:
          column: inventoryProductId
          table:
            schema: products
            name: comboProductComponent
    - name: customizableProductOptions
      using:
        foreign_key_constraint_on:
          column: inventoryProductId
          table:
            schema: products
            name: customizableProductOption
    - name: inventoryProductOptions
      using:
        foreign_key_constraint_on:
          column: inventoryProductId
          table:
            schema: products
            name: inventoryProductOption
    - name: orderInventoryProducts
      using:
        foreign_key_constraint_on:
          column: inventoryProductId
          table:
            schema: order
            name: orderInventoryProduct
  computed_fields:
    - name: defaultCartItem
      definition:
        function:
          schema: products
          name: defaultInventoryProductCartItem
      comment: ""
    - name: isValid
      definition:
        function:
          schema: products
          name: isinventoryproductvalid
      comment: ""
    - name: allergens
      definition:
        function:
          schema: products
          name: inventoryProductAllergens
      comment: ""
    - name: nutritionalInfo
      definition:
        function:
          schema: products
          name: inventoryProductNutrition
      comment: ""
    - name: cartItem
      definition:
        function:
          schema: products
          name: inventoryProductCartItem
      comment: ""
- table:
    schema: products
    name: inventoryProductOption
  configuration:
    custom_root_fields:
      insert: createInventoryProductOption
      select_aggregate: inventoryProductOptionsAggregate
      select_by_pk: inventoryProductOption
      select: inventoryProductOptions
      delete: deleteInventoryProductOption
      update: updateInventoryProductOption
    custom_column_names: {}
  object_relationships:
    - name: assemblyStation
      using:
        foreign_key_constraint_on: assemblyStationId
    - name: inventoryProduct
      using:
        foreign_key_constraint_on: inventoryProductId
    - name: labelTemplate
      using:
        foreign_key_constraint_on: labelTemplateId
    - name: modifier
      using:
        foreign_key_constraint_on: modifierId
    - name: operationConfig
      using:
        foreign_key_constraint_on: operationConfigId
    - name: packaging
      using:
        foreign_key_constraint_on: packagingId
  array_relationships:
    - name: orderInventoryProducts
      using:
        foreign_key_constraint_on:
          column: inventoryProductOptionId
          table:
            schema: order
            name: orderInventoryProduct
  computed_fields:
    - name: fullName
      definition:
        function:
          schema: products
          name: inventoryProductOptionFullName
      comment: ""
- table:
    schema: products
    name: simpleRecipeProduct
  configuration:
    custom_root_fields:
      insert: createSimpleRecipeProduct
      select_aggregate: simpleRecipeProductsAggregate
      select_by_pk: simpleRecipeProduct
      select: simpleRecipeProducts
      delete: deleteSimpleRecipeProduct
      update: updateSimpleRecipeProduct
    custom_column_names: {}
  object_relationships:
    - name: defaultSimpleRecipeProductOption
      using:
        foreign_key_constraint_on: default
    - name: productSkuReference
      using:
        foreign_key_constraint_on: productSku
    - name: simpleRecipe
      using:
        foreign_key_constraint_on: simpleRecipeId
  array_relationships:
    - name: comboProductComponents
      using:
        foreign_key_constraint_on:
          column: simpleRecipeProductId
          table:
            schema: products
            name: comboProductComponent
    - name: customizableProductOptions
      using:
        foreign_key_constraint_on:
          column: simpleRecipeProductId
          table:
            schema: products
            name: customizableProductOption
    - name: orderMealKitProducts
      using:
        foreign_key_constraint_on:
          column: simpleRecipeProductId
          table:
            schema: order
            name: orderMealKitProduct
    - name: orderReadyToEatProducts
      using:
        foreign_key_constraint_on:
          column: simpleRecipeProductId
          table:
            schema: order
            name: orderReadyToEatProduct
    - name: simpleRecipeProductOptions
      using:
        foreign_key_constraint_on:
          column: simpleRecipeProductId
          table:
            schema: products
            name: simpleRecipeProductOption
  computed_fields:
    - name: cartItem
      definition:
        function:
          schema: products
          name: simpleRecipeProductCartItem
      comment: ""
    - name: defaultCartItem
      definition:
        function:
          schema: products
          name: defaultSimpleRecipeProductCartItem
      comment: ""
    - name: isValid
      definition:
        function:
          schema: products
          name: isSimpleRecipeProductValid
      comment: ""
- table:
    schema: products
    name: simpleRecipeProductOption
  configuration:
    custom_root_fields:
      insert: createSimpleRecipeProductOption
      select_aggregate: simpleRecipeProductOptionsAggregate
      select_by_pk: simpleRecipeProductOption
      select: simpleRecipeProductOptions
      delete: deleteSimpleRecipeProductOption
      update: updateSimpleRecipeProductOption
    custom_column_names: {}
  object_relationships:
    - name: assemblyStation
      using:
        foreign_key_constraint_on: assemblyStationId
    - name: labelTemplate
      using:
        foreign_key_constraint_on: labelTemplateId
    - name: modifier
      using:
        foreign_key_constraint_on: modifierId
    - name: operationConfig
      using:
        foreign_key_constraint_on: operationConfigId
    - name: packaging
      using:
        foreign_key_constraint_on: packagingId
    - name: simpleRecipeProduct
      using:
        foreign_key_constraint_on: simpleRecipeProductId
    - name: simpleRecipeYield
      using:
        foreign_key_constraint_on: simpleRecipeYieldId
  array_relationships:
    - name: orderMealKitProducts
      using:
        foreign_key_constraint_on:
          column: simpleRecipeProductOptionId
          table:
            schema: order
            name: orderMealKitProduct
    - name: orderReadyToEatProducts
      using:
        foreign_key_constraint_on:
          column: simpleRecipeProductOptionId
          table:
            schema: order
            name: orderReadyToEatProduct
    - name: subscriptionOccurences
      using:
        foreign_key_constraint_on:
          column: simpleRecipeProductOptionId
          table:
            schema: subscription
            name: subscriptionOccurence_product
  computed_fields:
    - name: fullName
      definition:
        function:
          schema: products
          name: simpleRecipeProductOptionFullName
      comment: ""
- table:
    schema: public
    name: response
- table:
    schema: public
    name: table
  event_triggers:
    - name: test_trigger
      definition:
        enable_manual: false
        update:
          columns:
            - title
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook: https://example.com
- table:
    schema: public
    name: test
- table:
    schema: rules
    name: conditions
  configuration:
    custom_root_fields:
      insert: createConditions
      select_aggregate: conditionsAggregate
      insert_one: createCondition
      select_by_pk: condition
      select: conditions
      delete: deleteConditions
      update: updateConditions
      delete_by_pk: deleteCondition
      update_by_pk: updateCondition
    custom_column_names: {}
  computed_fields:
    - name: isValid
      definition:
        function:
          schema: rules
          name: isConditionValid
      comment: ""
- table:
    schema: rules
    name: facts
  configuration:
    custom_root_fields:
      insert: createFacts
      select_aggregate: factsAggregate
      insert_one: createFact
      select_by_pk: fact
      select: facts
      delete: deleteFacts
      update: updateFacts
      delete_by_pk: deleteFact
      update_by_pk: updateFact
    custom_column_names: {}
  computed_fields:
    - name: cartComboProduct
      definition:
        function:
          schema: rules
          name: cartComboProduct
      comment: ""
    - name: cartCustomProductOption
      definition:
        function:
          schema: rules
          name: cartCustomProductOption
      comment: ""
    - name: cartInvProduct
      definition:
        function:
          schema: rules
          name: cartInvProduct
      comment: ""
    - name: cartMealkitProductOption
      definition:
        function:
          schema: rules
          name: cartMealkitProductOption
      comment: ""
    - name: cartReadyToEatProductOption
      definition:
        function:
          schema: rules
          name: cartReadyToEatProductOption
      comment: ""
    - name: couponCountWithDuration
      definition:
        function:
          schema: rules
          name: couponCountWithDuration
      comment: ""
    - name: createdAt
      definition:
        function:
          schema: rules
          name: createdAt
      comment: ""
    - name: customerEmail
      definition:
        function:
          schema: rules
          name: customerEmail
      comment: ""
    - name: customerReferralCode
      definition:
        function:
          schema: rules
          name: customerReferralCode
      comment: ""
    - name: customerReferredByCode
      definition:
        function:
          schema: rules
          name: customerReferredByCode
      comment: ""
    - name: customerSource
      definition:
        function:
          schema: rules
          name: customerSource
      comment: ""
    - name: hasAtleastOrderedOnce
      definition:
        function:
          schema: rules
          name: hasAtleastOrderedOnce
      comment: ""
    - name: loyaltyPoints
      definition:
        function:
          schema: rules
          name: loyaltyPoints
      comment: ""
    - name: numOfOrders
      definition:
        function:
          schema: rules
          name: numOfOrders
      comment: ""
    - name: numberOfComboProducts
      definition:
        function:
          schema: rules
          name: numberOfComboProducts
      comment: ""
    - name: numberOfCustomizableProducts
      definition:
        function:
          schema: rules
          name: numberOfCustomizableProducts
      comment: ""
    - name: numberOfInventoryProducts
      definition:
        function:
          schema: rules
          name: numberOfInventoryProducts
      comment: ""
    - name: numberOfMealkitProducts
      definition:
        function:
          schema: rules
          name: numberOfMealkitProducts
      comment: ""
    - name: numberOfReadyToEatProducts
      definition:
        function:
          schema: rules
          name: numberOfReadyToEatProducts
      comment: ""
    - name: orderAmount
      definition:
        function:
          schema: rules
          name: orderAmount
      comment: ""
    - name: orderCountWithDuration
      definition:
        function:
          schema: rules
          name: orderCountWithDuration
      comment: ""
    - name: referralStatus
      definition:
        function:
          schema: rules
          name: referralStatus
      comment: ""
    - name: totalNumberOfComboProducts
      definition:
        function:
          schema: rules
          name: totalNumberOfComboProducts
      comment: ""
    - name: totalNumberOfCustomizableProducts
      definition:
        function:
          schema: rules
          name: totalNumberOfCustomizableProducts
      comment: ""
    - name: totalNumberOfInventoryProducts
      definition:
        function:
          schema: rules
          name: totalNumberOfInventoryProducts
      comment: ""
    - name: totalNumberOfMealkitProducts
      definition:
        function:
          schema: rules
          name: totalNumberOfMealkitProducts
      comment: ""
    - name: totalNumberOfReadyToEatProducts
      definition:
        function:
          schema: rules
          name: totalNumberOfReadyToEatProducts
      comment: ""
    - name: cartItemTotal
      definition:
        function:
          schema: rules
          name: cartItemTotal
      comment: ""
    - name: cartCustomProduct
      definition:
        function:
          schema: rules
          name: cartCustomProduct
      comment: ""
    - name: cartInvProductOption
      definition:
        function:
          schema: rules
          name: cartInvProductOption
      comment: ""
    - name: cartMealkitProduct
      definition:
        function:
          schema: rules
          name: cartMealkitProduct
      comment: ""
    - name: cartReadyToEatProduct
      definition:
        function:
          schema: rules
          name: cartReadyToEatProduct
      comment: ""
    - name: discountReward
      definition:
        function:
          schema: rules
          name: discountReward
      comment: ""
    - name: walletAmountReward
      definition:
        function:
          schema: rules
          name: walletAmountReward
      comment: ""
    - name: loyaltyPointsReward
      definition:
        function:
          schema: rules
          name: loyaltyPointsReward
      comment: ""
    - name: numberOfLoyaltyPointsReward
      definition:
        function:
          schema: rules
          name: numberOfLoyaltyPointsReward
      comment: ""
    - name: numberOfDiscountReward
      definition:
        function:
          schema: rules
          name: numberOfDiscountReward
      comment: ""
    - name: numberOfWalletAmountReward
      definition:
        function:
          schema: rules
          name: numberOfWalletAmountReward
      comment: ""
    - name: budget
      definition:
        function:
          schema: rules
          name: budget
      comment: ""
- table:
    schema: safety
    name: safetyCheck
  array_relationships:
    - name: SafetyCheckPerUsers
      using:
        foreign_key_constraint_on:
          column: SafetyCheckId
          table:
            schema: safety
            name: safetyCheckPerUser
- table:
    schema: safety
    name: safetyCheckPerUser
  object_relationships:
    - name: safetyCheck
      using:
        foreign_key_constraint_on: SafetyCheckId
    - name: user
      using:
        foreign_key_constraint_on: userId
- table:
    schema: settings
    name: app
  configuration:
    custom_root_fields:
      insert: insertApps
      select_aggregate: appsAggregate
      insert_one: insertApp
      select_by_pk: app
      select: apps
      delete: deleteApps
      update: updateApps
      delete_by_pk: deleteApp
      update_by_pk: updateApp
    custom_column_names: {}
  array_relationships:
    - name: permissions
      using:
        foreign_key_constraint_on:
          column: appId
          table:
            schema: settings
            name: appPermission
    - name: roles
      using:
        foreign_key_constraint_on:
          column: appId
          table:
            schema: settings
            name: role_app
- table:
    schema: settings
    name: appPermission
  object_relationships:
    - name: app
      using:
        foreign_key_constraint_on: appId
  array_relationships:
    - name: role_appPermissions
      using:
        foreign_key_constraint_on:
          column: appPermissionId
          table:
            schema: settings
            name: role_appPermission
- table:
    schema: settings
    name: appSettings
- table:
    schema: settings
    name: app_module
- table:
    schema: settings
    name: operationConfig
  object_relationships:
    - name: labelTemplate
      using:
        foreign_key_constraint_on: labelTemplateId
    - name: station
      using:
        foreign_key_constraint_on: stationId
- table:
    schema: settings
    name: role
  configuration:
    custom_root_fields:
      insert: insertRoles
      select_aggregate: rolesAggregate
      insert_one: insertRole
      select_by_pk: role
      select: roles
      delete: deleteRoles
      update: updateRoles
      delete_by_pk: deleteRole
      update_by_pk: updateRole
    custom_column_names: {}
  array_relationships:
    - name: apps
      using:
        foreign_key_constraint_on:
          column: roleId
          table:
            schema: settings
            name: role_app
    - name: users
      using:
        foreign_key_constraint_on:
          column: roleId
          table:
            schema: settings
            name: user_role
- table:
    schema: settings
    name: role_app
  object_relationships:
    - name: app
      using:
        foreign_key_constraint_on: appId
    - name: role
      using:
        foreign_key_constraint_on: roleId
  array_relationships:
    - name: permissions
      using:
        foreign_key_constraint_on:
          column: role_appId
          table:
            schema: settings
            name: role_appPermission
- table:
    schema: settings
    name: role_appPermission
  object_relationships:
    - name: permission
      using:
        foreign_key_constraint_on: appPermissionId
    - name: role_app
      using:
        foreign_key_constraint_on: role_appId
- table:
    schema: settings
    name: station
  configuration:
    custom_root_fields:
      insert: insertStations
      select_aggregate: stationsAggregate
      insert_one: insertStation
      select_by_pk: station
      select: stations
      delete: deleteStations
      update: updateStations
      delete_by_pk: deleteStation
      update_by_pk: updateStation
    custom_column_names: {}
  object_relationships:
    - name: defaultKotPrinter
      using:
        foreign_key_constraint_on: defaultKotPrinterId
    - name: defaultLabelPrinter
      using:
        foreign_key_constraint_on: defaultLabelPrinterId
    - name: defaultScale
      using:
        manual_configuration:
          remote_table:
            schema: deviceHub
            name: scale
          column_mapping:
            defaultScaleId: id
  array_relationships:
    - name: assignedScales
      using:
        manual_configuration:
          remote_table:
            schema: deviceHub
            name: scale
          column_mapping:
            id: stationId
    - name: assignedUsers
      using:
        foreign_key_constraint_on:
          column: stationId
          table:
            schema: settings
            name: station_user
    - name: attachedKotPrinters
      using:
        foreign_key_constraint_on:
          column: stationId
          table:
            schema: settings
            name: station_kot_printer
    - name: attachedLabelPrinters
      using:
        foreign_key_constraint_on:
          column: stationId
          table:
            schema: settings
            name: station_label_printer
    - name: bulkWorkOrders
      using:
        foreign_key_constraint_on:
          column: stationId
          table:
            schema: inventory
            name: bulkWorkOrder
    - name: modeOfFulfillments
      using:
        foreign_key_constraint_on:
          column: stationId
          table:
            schema: ingredient
            name: modeOfFulfillment
    - name: orderInventoryProductsAssembly
      using:
        foreign_key_constraint_on:
          column: assemblyStationId
          table:
            schema: order
            name: orderInventoryProduct
    - name: orderMealKitProductsAssembly
      using:
        foreign_key_constraint_on:
          column: assemblyStationId
          table:
            schema: order
            name: orderMealKitProduct
    - name: orderReadyToEatProductsAssembly
      using:
        foreign_key_constraint_on:
          column: assemblyStationId
          table:
            schema: order
            name: orderReadyToEatProduct
    - name: orderSachetsPacking
      using:
        foreign_key_constraint_on:
          column: packingStationId
          table:
            schema: order
            name: orderSachet
    - name: sachetWorkOrders
      using:
        foreign_key_constraint_on:
          column: stationId
          table:
            schema: inventory
            name: sachetWorkOrder
- table:
    schema: settings
    name: station_kot_printer
  object_relationships:
    - name: kotPrinter
      using:
        foreign_key_constraint_on: printNodeId
    - name: station
      using:
        foreign_key_constraint_on: stationId
- table:
    schema: settings
    name: station_label_printer
  object_relationships:
    - name: labelPrinter
      using:
        foreign_key_constraint_on: printNodeId
    - name: station
      using:
        foreign_key_constraint_on: stationId
- table:
    schema: settings
    name: station_user
  configuration:
    custom_root_fields:
      insert: createStation_users
      select_aggregate: station_usersAggregate
      insert_one: createStation_user
      select_by_pk: station_users
      select: station_user
      delete: deleteStation_users
      update: updateStation_users
      delete_by_pk: deleteStation_user
      update_by_pk: updateStation_user
    custom_column_names: {}
  object_relationships:
    - name: station
      using:
        foreign_key_constraint_on: stationId
    - name: user
      using:
        foreign_key_constraint_on: userKeycloakId
- table:
    schema: settings
    name: user
  array_relationships:
    - name: assignedStations
      using:
        foreign_key_constraint_on:
          column: userKeycloakId
          table:
            schema: settings
            name: station_user
    - name: bulkWorkOrders
      using:
        foreign_key_constraint_on:
          column: userId
          table:
            schema: inventory
            name: bulkWorkOrder
    - name: roles
      using:
        foreign_key_constraint_on:
          column: userId
          table:
            schema: settings
            name: user_role
    - name: sachetWorkOrders
      using:
        foreign_key_constraint_on:
          column: userId
          table:
            schema: inventory
            name: sachetWorkOrder
  event_triggers:
    - name: manageUser
      definition:
        enable_manual: true
        delete:
          columns: "*"
        update:
          columns:
            - email
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_MANAGE_USER
- table:
    schema: settings
    name: user_role
  object_relationships:
    - name: role
      using:
        foreign_key_constraint_on: roleId
    - name: user
      using:
        foreign_key_constraint_on: userId
- table:
    schema: simpleRecipe
    name: simpleRecipe
  configuration:
    custom_root_fields:
      insert: createSimpleRecipe
      select_aggregate: simpleRecipesAggregate
      select_by_pk: simpleRecipe
      select: simpleRecipes
      delete: deleteSimpleRecipe
      update: updateSimpleRecipe
    custom_column_names: {}
  object_relationships:
    - name: cuisineNameId
      using:
        foreign_key_constraint_on: cuisine
  array_relationships:
    - name: orderReadyToEatProducts
      using:
        foreign_key_constraint_on:
          column: simpleRecipeId
          table:
            schema: order
            name: orderReadyToEatProduct
    - name: simpleRecipeProducts
      using:
        foreign_key_constraint_on:
          column: simpleRecipeId
          table:
            schema: products
            name: simpleRecipeProduct
    - name: simpleRecipeYields
      using:
        foreign_key_constraint_on:
          column: simpleRecipeId
          table:
            schema: simpleRecipe
            name: simpleRecipeYield
  computed_fields:
    - name: isValid
      definition:
        function:
          schema: simpleRecipe
          name: issimplerecipevalid
      comment: ""
- table:
    schema: simpleRecipe
    name: simpleRecipeYield
  configuration:
    custom_root_fields:
      insert: createSimpleRecipeYield
      select_aggregate: simpleRecipeYieldsAggregate
      select_by_pk: simpleRecipeYield
      select: simpleRecipeYields
      delete: deleteSimpleRecipeYield
      update: updateSimpleRecipeYield
    custom_column_names: {}
  object_relationships:
    - name: simpleRecipe
      using:
        foreign_key_constraint_on: simpleRecipeId
  array_relationships:
    - name: ingredientSachets
      using:
        foreign_key_constraint_on:
          column: recipeYieldId
          table:
            schema: simpleRecipe
            name: simpleRecipeYield_ingredientSachet
  computed_fields:
    - name: nutritionalInfo
      definition:
        function:
          schema: simpleRecipe
          name: yieldNutritionalInfo
      comment: ""
    - name: cost
      definition:
        function:
          schema: simpleRecipe
          name: yieldCost
      comment: ""
    - name: allergens
      definition:
        function:
          schema: simpleRecipe
          name: yieldAllergens
      comment: ""
- table:
    schema: simpleRecipe
    name: simpleRecipeYield_ingredientSachet
  configuration:
    custom_root_fields:
      insert: createSimpleRecipeSachet
      select_aggregate: simpleRecipeSachetsAggregate
      select_by_pk: simpleRecipeSachet
      select: simpleRecipeSachets
      delete: deleteSimpleRecipeSachet
      update: updateSimpleRecipeSachet
    custom_column_names: {}
  object_relationships:
    - name: ingredientSachet
      using:
        foreign_key_constraint_on: ingredientSachetId
    - name: simpleRecipeYield
      using:
        foreign_key_constraint_on: recipeYieldId
- table:
    schema: subscription
    name: brand_subscriptionTitle
  object_relationships:
    - name: brand
      using:
        foreign_key_constraint_on: brandId
- table:
    schema: subscription
    name: subscription
  object_relationships:
    - name: subscriptionItemCount
      using:
        foreign_key_constraint_on: subscriptionItemCountId
  array_relationships:
    - name: availableZipcodes
      using:
        foreign_key_constraint_on:
          column: subscriptionId
          table:
            schema: subscription
            name: subscription_zipcode
    - name: customers
      using:
        foreign_key_constraint_on:
          column: subscriptionId
          table:
            schema: crm
            name: customer
    - name: subscriptionOccurences
      using:
        foreign_key_constraint_on:
          column: subscriptionId
          table:
            schema: subscription
            name: subscriptionOccurence
    - name: subscriptionProducts
      using:
        foreign_key_constraint_on:
          column: subscriptionId
          table:
            schema: subscription
            name: subscriptionOccurence_product
  event_triggers:
    - name: createOccurences
      definition:
        enable_manual: true
        insert:
          columns: "*"
        update:
          columns:
            - endDate
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_CREATE_OCCURENCES
- table:
    schema: subscription
    name: subscriptionItemCount
  object_relationships:
    - name: subscriptionServing
      using:
        foreign_key_constraint_on: subscriptionServingId
  array_relationships:
    - name: subscriptions
      using:
        foreign_key_constraint_on:
          column: subscriptionItemCountId
          table:
            schema: subscription
            name: subscription
  computed_fields:
    - name: isValid
      definition:
        function:
          schema: subscription
          name: isSubscriptionItemCountValid
      comment: ""
- table:
    schema: subscription
    name: subscriptionOccurence
  configuration:
    custom_root_fields:
      insert: insertSubscriptionOccurences
      select_aggregate: subscriptionOccurencesAggregate
      insert_one: insertSubscriptionOccurence
      select_by_pk: subscriptionOccurence
      select: subscriptionOccurences
      delete: deleteSubscriptionOccurences
      update: updateSubscriptionOccurences
      delete_by_pk: deleteSubscriptionOccurence
      update_by_pk: updateSubscriptionOccurence
    custom_column_names: {}
  object_relationships:
    - name: subscription
      using:
        foreign_key_constraint_on: subscriptionId
  array_relationships:
    - name: brand_subscriptionOccurences
      using:
        manual_configuration:
          remote_table:
            schema: brands
            name: brand
          column_mapping:
            id: id
    - name: customers
      using:
        foreign_key_constraint_on:
          column: subscriptionOccurenceId
          table:
            schema: subscription
            name: subscriptionOccurence_customer
    - name: orderCarts
      using:
        foreign_key_constraint_on:
          column: subscriptionOccurenceId
          table:
            schema: crm
            name: orderCart
    - name: products
      using:
        foreign_key_constraint_on:
          column: subscriptionOccurenceId
          table:
            schema: subscription
            name: subscriptionOccurence_product
  computed_fields:
    - name: isValid
      definition:
        function:
          schema: subscription
          name: calculateIsValid
      comment: ""
    - name: isVisible
      definition:
        function:
          schema: subscription
          name: calculateIsVisible
      comment: ""
  event_triggers:
    - name: createOccurenceScheduledEvent
      definition:
        enable_manual: true
        insert:
          columns: "*"
        update:
          columns:
            - cutoffTimeStamp
      retry_conf:
        num_retries: 0
        interval_sec: 10
        timeout_sec: 60
      webhook_from_env: WEBHOOK_CREATE_OCCURENCE_SCHEDULED_EVENT
- table:
    schema: subscription
    name: subscriptionOccurence_customer
  object_relationships:
    - name: customer
      using:
        foreign_key_constraint_on: keycloakId
    - name: orderCart
      using:
        foreign_key_constraint_on: orderCartId
    - name: subscriptionOccurence
      using:
        foreign_key_constraint_on: subscriptionOccurenceId
- table:
    schema: subscription
    name: subscriptionOccurence_product
  object_relationships:
    - name: inventoryProduct
      using:
        foreign_key_constraint_on: inventoryProductId
    - name: inventoryProductOption
      using:
        foreign_key_constraint_on: inventoryProductOptionId
    - name: productCategoryRef
      using:
        foreign_key_constraint_on: productCategory
    - name: simpleRecipeProduct
      using:
        foreign_key_constraint_on: simpleRecipeProductId
    - name: simpleRecipeProductOption
      using:
        foreign_key_constraint_on: simpleRecipeProductOptionId
    - name: subscription
      using:
        foreign_key_constraint_on: subscriptionId
    - name: subscriptionOccurence
      using:
        foreign_key_constraint_on: subscriptionOccurenceId
  computed_fields:
    - name: cartItem
      definition:
        function:
          schema: subscription
          name: cartItem
      comment: ""
- table:
    schema: subscription
    name: subscriptionServing
  object_relationships:
    - name: defaultSubscriptionItemCount
      using:
        foreign_key_constraint_on: defaultSubscriptionItemCountId
    - name: subscriptionTitle
      using:
        foreign_key_constraint_on: subscriptionTitleId
  array_relationships:
    - name: subscriptionItemCounts
      using:
        foreign_key_constraint_on:
          column: subscriptionServingId
          table:
            schema: subscription
            name: subscriptionItemCount
  computed_fields:
    - name: isValid
      definition:
        function:
          schema: subscription
          name: isSubscriptionServingValid
      comment: ""
- table:
    schema: subscription
    name: subscriptionTitle
  object_relationships:
    - name: defaultSubscriptionServing
      using:
        foreign_key_constraint_on: defaultSubscriptionServingId
  array_relationships:
    - name: brands
      using:
        manual_configuration:
          remote_table:
            schema: subscription
            name: brand_subscriptionTitle
          column_mapping:
            id: subscriptionTitleId
    - name: subscriptionServings
      using:
        foreign_key_constraint_on:
          column: subscriptionTitleId
          table:
            schema: subscription
            name: subscriptionServing
  computed_fields:
    - name: isValid
      definition:
        function:
          schema: subscription
          name: isSubscriptionTitleValid
      comment: ""
- table:
    schema: subscription
    name: subscription_zipcode
  object_relationships:
    - name: subscription
      using:
        foreign_key_constraint_on: subscriptionId
